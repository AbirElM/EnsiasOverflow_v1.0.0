[{"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js":"1","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js":"2","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js":"3","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\QuestionContext.js":"4","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js":"5","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js":"6","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js":"7","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js":"8","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js":"9","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js":"10","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js":"11","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js":"12","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js":"13","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js":"14","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js":"15","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js":"16","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js":"17","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js":"18","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\pagination.js":"19","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\SideBar.js":"20","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js":"21","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\users\\UserList.js":"22","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\tags\\TagList.js":"23","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\editor\\QuillEditor.js":"24","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questionsList.js":"25","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\users\\Progress.js":"26","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\SideBarData.js":"27","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\ListUsers\\UserDetail.js":"28","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\ListUsers\\Users.js":"29","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\ListUsers\\UserItem.js":"30","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\tags\\TagDetail.js":"31"},{"size":197,"mtime":1613700764950,"results":"32","hashOfConfig":"33"},{"size":2851,"mtime":1613589055247,"results":"34","hashOfConfig":"33"},{"size":75,"mtime":1608589240348,"results":"35","hashOfConfig":"33"},{"size":75,"mtime":1610019077986,"results":"36","hashOfConfig":"33"},{"size":2650,"mtime":1610791211877,"results":"37","hashOfConfig":"33"},{"size":1253,"mtime":1613239436861,"results":"38","hashOfConfig":"33"},{"size":2753,"mtime":1613239436777,"results":"39","hashOfConfig":"33"},{"size":5175,"mtime":1613578765958,"results":"40","hashOfConfig":"33"},{"size":1578,"mtime":1609881886125,"results":"41","hashOfConfig":"33"},{"size":5063,"mtime":1613700764942,"results":"42","hashOfConfig":"33"},{"size":3390,"mtime":1613731126659,"results":"43","hashOfConfig":"33"},{"size":249,"mtime":1610791211860,"results":"44","hashOfConfig":"33"},{"size":539,"mtime":1608983842355,"results":"45","hashOfConfig":"33"},{"size":478,"mtime":1609282064095,"results":"46","hashOfConfig":"33"},{"size":4822,"mtime":1613731432116,"results":"47","hashOfConfig":"33"},{"size":1288,"mtime":1613589055255,"results":"48","hashOfConfig":"33"},{"size":2728,"mtime":1613700764930,"results":"49","hashOfConfig":"33"},{"size":3348,"mtime":1613700764934,"results":"50","hashOfConfig":"33"},{"size":670,"mtime":1609949088257,"results":"51","hashOfConfig":"33"},{"size":579,"mtime":1613239436858,"results":"52","hashOfConfig":"33"},{"size":2534,"mtime":1613700764932,"results":"53","hashOfConfig":"33"},{"size":7457,"mtime":1613589055271,"results":"54","hashOfConfig":"33"},{"size":919,"mtime":1613731126734,"results":"55","hashOfConfig":"33"},{"size":15259,"mtime":1613700764940,"results":"56","hashOfConfig":"33"},{"size":4780,"mtime":1613731432118,"results":"57","hashOfConfig":"33"},{"size":469,"mtime":1613239436925,"results":"58","hashOfConfig":"33"},{"size":970,"mtime":1613589055259,"results":"59","hashOfConfig":"33"},{"size":9897,"mtime":1613731432115,"results":"60","hashOfConfig":"33"},{"size":1492,"mtime":1613589055253,"results":"61","hashOfConfig":"33"},{"size":1033,"mtime":1613700764928,"results":"62","hashOfConfig":"33"},{"size":6841,"mtime":1613734649112,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lll919",{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"69"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"69"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js",["145","146","147"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Axios from \"axios\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/layout/header\";\r\nimport home from \"./components/layout/home\";\r\nimport login from \"./components/auth/login\";\r\nimport register from \"./components/auth/reg\";\r\nimport \"./components/layout/style.css\";\r\nimport \"./components/pages/pages.css\";\r\nimport \"./components/pages/searchBar.css\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport QuestionContext from \"./context/QuestionContext\";\r\n\r\nimport Post_question from \"./components/pages/post_question\";\r\nimport Questions from \"./components/pages/questions\";\r\nimport Question from \"./components/Question/Question\";\r\n\r\nexport default function App() {\r\n  const getQuestion = () => {};\r\n\r\n  const [questionData, setQuestionData] = useState();\r\n  const [userInfo, setUserInfo] = useState({});\r\n  // useEffect(() => {}, [questionData]);\r\n\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined, //user\r\n  });\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        token = \"\";\r\n      }\r\n      const tokenRes = await Axios.post(\"/user/verifytoken\", null, {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n\r\n      if (tokenRes.data) {\r\n        const userRes = await Axios.get(\"/user/\", {\r\n          headers: {\r\n            \"auth-token\": token,\r\n          },\r\n        });\r\n        setUserData({\r\n          token,\r\n          user: userRes.data,\r\n        });\r\n      }\r\n    };\r\n\r\n    checkLoggedIn();\r\n\r\n    // const getQuestions = async () => {\r\n    //   Axios.get(\"/posts/all\")\r\n    //     .then((res) => {\r\n    //       setQuestionData(res.data);\r\n    //       console.log(res.data);\r\n    //     })\r\n    //     .catch((err) => console.log(err));\r\n    // };\r\n    // getQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <UserContext.Provider value={{ userData, setUserData }}>\r\n          <QuestionContext.Provider value={{ questionData, setQuestionData }}>\r\n            <Header></Header>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={home} />\r\n              <Route path=\"/login\" component={login} />\r\n              <Route path=\"/register\" component={register} />\r\n              {/* check logged in */}\r\n              <Route path=\"/posts/ask\" component={Post_question} />\r\n              <Route path=\"/posts/all\" component={Questions} />\r\n              <Route path=\"/posts/:id\" component={Question} />\r\n            </Switch>\r\n          </QuestionContext.Provider>\r\n        </UserContext.Provider>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n",["148","149"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\QuestionContext.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js",["150","151","152","153","154","155"],"import React, { useState, useEffect, useContext} from \"react\";\r\nimport QuestionItem from \"../pages/QuestionItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthOptions from \"../auth/options\";\r\nimport img from \"../../components/images/1.png\";\r\nimport Axios from \"axios\";\r\nimport QuestionContext from \"../../context/QuestionContext\"\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport '../../components/pages/pages.css';\r\nexport default function Header() {\r\n\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  // const [questionData, setQuestionData] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   Axios.get(\"/posts/all\")\r\n  //     .then((res) => {\r\n  //       setQuestionData(res.data);\r\n  //       console.log(res.data);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n \r\n    /**\r\n   * QuestionContext TEST\r\n   */\r\n\r\n  const questions_data = useContext(QuestionContext)\r\n  console.log();\r\n  const qsts = questions_data.questionData;\r\n  \r\n\r\n\r\n  return (\r\n    <header id=\"header\">\r\n      <Link className=\"title\" to=\"/\">\r\n        <img src={img} width=\"150\" height=\"50\" />\r\n      </Link>\r\n\r\n      {/* <div>\r\n          <input className=\"form-control head\"\r\n            id=\"SearchBar\"\r\n\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            // style={inputstyle}\r\n            // onChange={(Event) => setSearchItem(Event.target.value)}\r\n          />\r\n          \r\n         <span><i className=\"\"><FontAwesomeIcon icon={faSearch} /></i></span>\r\n          \r\n        </div> */}\r\n\r\n      <div class=\"input-group md-form form-sm form-2 pl-0 head\">\r\n        <input\r\n          class=\"form-control my-0 py-1 red-border\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n        onChange={(Event) => setSearchItem(Event.target.value)}\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <span class=\"input-group-text red lighten-3\" id=\"basic-text1\">\r\n            <i aria-hidden=\"true\">\r\n            <FontAwesomeIcon icon={faSearch}/>\r\n\r\n            </i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* {qsts\r\n          .filter((qst) => {\r\n            if (searchItem === \"\") {\r\n              return qst;\r\n            } else if (\r\n              qst.qst_title.toLowerCase().includes(searchItem.toLowerCase())\r\n            ) {\r\n              return qst;\r\n            }\r\n          })\r\n          .map((qst) => (\r\n            <div>\r\n            {qst.qst_title}\r\n             </div>\r\n          ))} */}\r\n\r\n      <AuthOptions></AuthOptions>\r\n    </header>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js",["156","157","158","159","160"],"import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport Register from \"../auth/reg\";\r\nimport Login from \"../auth/login\";\r\nimport Footer from \"./Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport Post_question from \"../pages/post_question\";\r\nimport image from '../../../src/codingitem.jpg';\r\nimport \"./style.css\";\r\nexport default function home() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg logan\">\r\n            <h1 className=\"label\">Bienvenue au EnsiasOverflow</h1>\r\n            <p>Votre propre monde professionel</p>\r\n            <img\r\n              src={image}\r\n              alt=\"profils pic\"\r\n              width=\"70%\"\r\n              style={{\r\n                borderRadius: \"150px\",\r\n                marginTop: \"10%\",\r\n                marginLeft: \"10%\",\r\n              }}\r\n              \r\n            />\r\n          </div>\r\n          <div className=\"col-lg\">\r\n            {/* <Login/> */}\r\n            <Post_question></Post_question>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <Footer />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js",["161"],"import React, { useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { Fragment } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nfunction Register() {\r\n  /** Tracking the states of the form */\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [fname, setFirstName] = useState();\r\n  const [lname, setLastName] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const [success, setSuccess] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const { setUserData } = useContext(UserContext);\r\n  // const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = {\r\n        username,\r\n        fname,\r\n        lname,\r\n        email,\r\n        password,\r\n        passwordCheck,\r\n      };\r\n      await Axios.post(\"http://localhost:5000/api/user/register\", newUser);\r\n\r\n      const loginRes = await Axios.post(\r\n        \"http://localhost:5000/api/user/login\",\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.id,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      //  console.log(loginRes.data.user.id);\r\n      if (loginRes.data.token) {\r\n        setSuccess(\"Account created successfully. Welcome aboard !\");\r\n      }\r\n      // history.push(\"/\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n    // window.location.reload(false);\r\n    // console.log(loginRes);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <section>\r\n          <h1 className=\"label text-primary\">Sign Up</h1>\r\n          {success && (\r\n            <SuccessNotice\r\n              message={success}\r\n              clearError={() => setSuccess(undefined)}\r\n            />\r\n          )}\r\n      \r\n          {error && (\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n            />\r\n          )}\r\n\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i> Sign Into Your Account\r\n          </p>\r\n          <form onSubmit={submit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputusername\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-username\"\r\n                placeholder=\"Username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputLastName\">Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-lastname\"\r\n                placeholder=\"Doe\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputFirstName\">First name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-firstname\"\r\n                placeholder=\"Jane\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputemail\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"reg-email\"\r\n                placeholder=\"email@gmail.com\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password\"\r\n                placeholder=\"******\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password-vf\"\r\n                placeholder=\"Verify Password\"\r\n                onChange={(e) => setPasswordCheck(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" value=\"Register\" className=\"btn btn-primary\">\r\n              Register\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?\r\n            <Link to=\"/login\"> Sign in</Link>\r\n          </p>\r\n        </section>\r\n      </div>\r\n      <Footer></Footer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js",["162"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport QuestionItem from \"../Question/QuestionItem\";\nimport ResponseForm from \"./ResponseForm\";\nimport ResponseItem from \"./ResponseItem\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Question = ({ match }) => {\n  const [question, setQuestion] = useState({});\n//   const [author, setAuthor] = useState({});\n  const [responses, setResponses] = useState([]);\n  const questionId = match.params.id;\n \n  useEffect(() => {\n    axios\n      .get(\"/posts/\" + questionId)\n      .then((res) => {\n        setQuestion(res.data);\n        // console.log(question);\n      })\n      .catch((err) => console.log(err));\n    axios\n      .get(\"/posts/reponses/\" + match.params.id)\n      .then((res) => setResponses(res.data))\n      .catch();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <Link to=\"/posts/all\">\n          <i className=\"fa fa-arrow-left\"></i>Back to questions\n        </Link>\n       \n        <QuestionItem question={questionId} />\n        <div>\n          <div className=\"border m-2\"></div>\n          <p className=\"\">{responses.length} answers</p>\n\n          {responses.map((response) => (\n            <ResponseItem\n              key={response._id}\n              questionId={questionId}\n              response={response}\n            />\n          ))}\n        </div>\n        <div className=\"border m-2\"></div>\n        <ResponseForm id={question._id} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Question;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js",["163","164","165"],"import React, { useState, useContext, useEffect, Fragment } from \"react\";\r\n\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\n// import List from '@editorjs/list';\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport QuillEditor from \"./editor/QuillEditor\";\r\nimport { message } from \"antd\";\r\nimport underscore from \"underscore\";\r\nexport default function Post_question() {\r\n  const userData = useContext(UserContext);\r\n\r\n  const onEditorChange = (value) => {\r\n    setContent(value);\r\n  };\r\n  const onFilesChange = (files) => {\r\n    setFiles(files);\r\n  };\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const [qst_title, setTitle] = useState();\r\n  const [qst_content, setContent] = useState();\r\n\r\n  const [error, setError] = useState();\r\n\r\n  const [success, setSuccess] = useState();\r\n  const [tags, setTags] = useState([]);\r\n  const [newtag, setNewtag] = useState([]);\r\n\r\n  // Add Chips\r\n  const handleAddChip = (chip) => {\r\n    // setTags(tags,chip);\r\n    setTags((tags) => [...tags, chip]);\r\n    const obj = {tag: chip}\r\n    setNewtag(newtag.concat(obj));\r\n    // console.log(chip);\r\n    console.log(newtag);\r\n  };\r\n  // Delete Chips\r\n  const handleDeleteChip = (chip) => {\r\n    setTags(underscore.without(tags, chip));\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = userData.userData.token;\r\n      if (token == undefined) {\r\n        message.error(\"You must be logged in to post a question.\");\r\n        setTimeout(() => {}, 2500);\r\n      }\r\n\r\n      const newQuestion = {\r\n        qst_title,\r\n        qst_content,\r\n        newtag,\r\n      };\r\n\r\n      const postres = await Axios.post(\"/posts/ask/\", newQuestion, {\r\n        headers: { \"auth-token\": userData.userData.token },\r\n      });\r\n      console.log('qst id is'+postres.data)\r\n      const id = postres.data\r\n      await newtag.forEach((tg)=>{\r\n        const tag = tg.tag\r\n        console.log(tag)\r\n        const ntag={tag}\r\n         Axios.post(`/tags/addtag/${id}`,ntag)\r\n      })\r\n      if (postres) {\r\n        \r\n        // setSuccess(\"Question posted successfully !\");\r\n        message.success(\"Post Created!\");\r\n        setTimeout(() => {}, 2500);\r\n      }\r\n    } catch (err) {\r\n      err.response.data.msg && message.warning(err.response.data.msg);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={submit}>\r\n            <h1 className=\"label text-primary\"> Got a question ?</h1>\r\n\r\n            {success && (\r\n              <SuccessNotice\r\n                message={success}\r\n                clearError={() => setSuccess(undefined)}\r\n              />\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              {error && (\r\n                <ErrorNotice\r\n                  message={error}\r\n                  clearError={() => setError(undefined)}\r\n                />\r\n              )}\r\n              <label for=\"qst_title\">Question title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"qst_title\"\r\n                aria-describedby=\"Put your question title here\"\r\n                placeholder=\"Put your question title here\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n              <small id=\"qst_help\" className=\"form-text text-muted\">\r\n                Keep it simple !\r\n              </small>\r\n            </div>\r\n            <ChipInput\r\n              value={tags}\r\n              label=\"IT Tags\"\r\n              defaultValue={[\"question\", \"tags\", \"here\"]}\r\n              onAdd={(chip) => handleAddChip(chip)}\r\n              onDelete={(chip, index) => handleDeleteChip(chip, index)}\r\n            />\r\n            <div>\r\n              {\" \"}\r\n              Tags :{\" \"}\r\n              <p>\r\n                {tags.map((tag) => (\r\n                  <li>{tag}</li>\r\n                ))}\r\n              </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"\">Content</label>\r\n\r\n              <div id=\"ql-editor\">\r\n                <QuillEditor\r\n                  className=\"ql-editor\"\r\n                  placeholder=\"Start Posting Something\"\r\n                  onEditorChange={onEditorChange}\r\n                  onFilesChange={onFilesChange}\r\n                  // onFilesChange={onFilesChange}\r\n                />\r\n              </div>\r\n              {/* <textarea\r\n                type=\"text\"\r\n                className=\"form-control full-width\"\r\n                id=\"qst_content\"\r\n                placeholder=\"Content of the question\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              /> */}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Post\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js",["191"],"import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer-copyright text-center py-3 bg-light\">\r\n        © 2020 Copyright:\r\n            <a> EnsiasOverflow</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js",["192"],"import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function SuccessNotice(props) {\r\n    return (\r\n        <div>\r\n            <Alert variant='success' id='succ_message'>\r\n            <span> {props.message} \r\n            {/* <Link id='link_signin' to=\"/login\"> <br/> Sign in Now</Link> */}\r\n            </span>\r\n            \r\n            {/* <button onClick={props.clearError}>X</button>          */}\r\n            \r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js",["193","194","195","196"],"import React, { Fragment, useState, useContext } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\n\r\nfunction QuestionItem({ qst }) {\r\n\r\n  const dt = new Date(Date.now - qst.asked_date);\r\n  const [like, setlikes] = useState([qst.qst_likes.length]);\r\n  const [dislike, setdislikes] = useState([qst.qst_dislikes.length]);\r\n  const userData = useContext(UserContext);\r\n  const url = \"http://localhost:3000/posts/all/UserslList/user/\";\r\n  const tagurl= \"/tags/all/tag/\"\r\n  const handleLike = (id) => {\r\n    // const id = _id;\r\n    const token = userData.userData.token;\r\n    if (token == undefined) {\r\n      message.error(\"You must be logged in to perform this action.\");\r\n\r\n      setTimeout(() => {}, 2500);\r\n    }\r\n\r\n    axios\r\n      .put(\"/posts/like/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((result) => {\r\n        // console.log(result.data.qst_likes.length);\r\n        setlikes(result.data.qst_likes.length);\r\n        setdislikes(result.data.qst_dislikes.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const handleDislike = (id) => {\r\n  //   axios\r\n  //     .put(\"/posts/unlike/\" + id, null, {\r\n  //       headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n  //     })\r\n  //     .then((result) => {\r\n  //       /**\r\n  //        * Here the result displays the dislikes.lenght\r\n  //        */\r\n  //       // console.log(result.data.qst_likes.length);\r\n  //       setlikes(result.data.qst_likes.length);\r\n  //       setdislikes(result.data.qst_dislikes.length);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: \"70vw\", margin: \"5px\" }}>\r\n        <Card.Body>\r\n          <Card.Title>{qst.qst_title}</Card.Title>\r\n\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n          <Avatar src={qst.user.pic}></Avatar>\r\n            <Card.Link href={url + qst.user._id }> {qst.user.username} </Card.Link>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted\">\r\n            {\" \"}\r\n            On : {qst.asked_date.substring(0, 10)}{\" \"}\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted primary\">\r\n            {\" \"}\r\n            Asked : {moment(qst.asked_date).fromNow()}\r\n          </Card.Subtitle>\r\n        \r\n         \r\n\r\n          <Card.Text>\r\n            <div dangerouslySetInnerHTML={{ __html: qst.qst_content }}></div>\r\n          </Card.Text>\r\n\r\n          <Card.Text>\r\n            <div className=\"tag_chip\">\r\n\r\n            <ul className='pagination'>\r\n                {qst.tags.map((tag) => (\r\n                  <li className='page-item' key={tag._id}>\r\n                    <Link  to={tagurl+ tag.tag} className=\"page-link\">{tag.tag}</Link>\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n\r\n            </div>\r\n          </Card.Text>\r\n          <div className=\"ml-auto\">\r\n          \r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-2\"\r\n              onClick={() => {\r\n                handleLike(qst._id);\r\n              }}\r\n            >\r\n            <i className=\"fa fa-thumbs-up\"></i>\r\n\r\n              <span> {like} </span>\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                handleDislike(qst._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-down\"></i>{\" \"}\r\n              {qst.qst_dislikes.length > 0 && <span> {dislike}</span>}\r\n            </button> */}\r\n            <Link\r\n              to={`/posts/all/question/${qst._id}`}\r\n              className=\"btn btn-outline-success margin\"\r\n            >\r\n              View answers{\" \"}\r\n              {qst.responses.length > 0 && (\r\n                <span className=\"comment-count\">{qst.responses.length}</span>\r\n              )}\r\n            </Link>\r\n         \r\n              <Button\r\n                className=\" ml-1 \"\r\n                value=\"Spam\"\r\n                variant=\"outline-warning\"\r\n              >\r\n                {\" \"}\r\n                Spam\r\n              </Button>\r\n            <div className=\"d-flex p-2 bd-highlight\" >\r\n           \r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <>\r\n        <br></br>\r\n      </>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuestionItem;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js",["197","198","199"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\nimport moment from 'moment'\r\nconst spanStyle = {\r\n  color : 'black'\r\n}\r\nfunction QuestionItem({ question }) {\r\n  // console.log(question.user.username);\r\n\r\n  const [questionAsked, setQuestionAsked] = useState({});\r\n  const [author, setAuthor] = useState({question});\r\n\r\n  //   const [author, setAuthor] = useState({});\r\n  // const [responses, setResponses] = useState([]);\r\n  // const questionId = match.params.id;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/posts/\" + question)\r\n      .then(JSON => {\r\n        setQuestionAsked(JSON.data);\r\n        setAuthor(JSON.data)\r\n        console.log(author);\r\n        // console.log(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 className=\"\">{questionAsked.qst_title}</h3>\r\n      <Card style={{ width: \"70vw\", borderColor: \"black\" }}>\r\n        <Card.Body>\r\n          <Card.Subtitle\r\n            className=\"mb-2 text-muted\"\r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n          >\r\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n            Author: \r\n              <Card.Link href=\"#LinktoUser\">\r\n                  {questionAsked.username}\r\n\r\n               </Card.Link>\r\n            </div>\r\n            <div\r\n              className=\"mb-1 text-muted\"\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              On : {moment(questionAsked.asked_date).format('LL')}, <span style={spanStyle}>{moment(questionAsked).fromNow()}</span>\r\n            </div>\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: questionAsked.qst_content }}\r\n            ></div>\r\n          </Card.Text>\r\n          <div className=\"ml-auto\">\r\n            {/* <span type=\"button\" className=\"btn btn-success mr-2\"  >\r\n                <i className=\"fa fa-thumbs-up\"></i> {' '}\r\n                {question.qst_likes.length >0 && <span>{question.qst_likes.length}</span>} \r\n              </span> */}\r\n            {/* <span type=\"button\" className=\"btn btn-success\">\r\n                <i className=\"fa fa-thumbs-down\"></i> {' '}\r\n                {question.qst_dislikes.length >0 && <span>{question.qst_dislikes.length}</span>} \r\n              </span> */}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuestionItem;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js",["200","201","202","203"],"import React, { Fragment, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\n\r\nimport {message} from \"antd\"; \r\n\r\n\r\nconst ResponseItem = ({ response, questionId }) => {\r\n \r\n  const [like, setlikes] = useState([response.rep_likes.length]);\r\n  const [dislike, setdislikes] = useState([response.rep_dislikes.length]);\r\n  const [error, setError] = useState();\r\n  // const { setUserData } = useContext(UserContext);\r\n  const handleLike = (res_id) => {\r\n    const id = res_id;\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    if (token == \"\") {\r\n      message.error('You must be logged in to perform this action.');\r\n\r\n      setTimeout(() => {\r\n         \r\n      }, 2500);\r\n    }\r\n    axios\r\n      .put(\"/posts/like/\" + questionId + \"/responses/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.rep_likes.length);\r\n        setlikes(res.data.rep_likes.length);\r\n        setdislikes(res.data.rep_dislikes.length);\r\n      })\r\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\r\n  };\r\n\r\n  const handleDislike = (res_id) => {\r\n    const id = res_id;\r\n    axios\r\n      .put(\"/posts/unlike/\" + questionId + \"/responses/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setlikes(res.data.rep_likes.length);\r\n        setdislikes(res.data.rep_dislikes.length);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: \"70vw\", margin: \"5px\", borderColor: \"black\" }}>\r\n        <Card.Body>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Answered by :\r\n            <Card.Link href=\"#LinktoUser\"> {response.username} </Card.Link>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted\">\r\n            {\" \"}\r\n            On : {response.rep_date.substring(0, 10)}{\" \"}\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: response.rep_content }}\r\n            ></div>\r\n          </Card.Text>\r\n          <div className=\"ml-auto\">\r\n            {/* {error && (<>\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n              link =\"Sign in here\"\r\n            />\r\n          </>\r\n           \r\n          )} */}\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-2\"\r\n              value={response._id}\r\n              onClick={() => {\r\n                handleLike(response._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-up\"></i> <span>{like}</span>\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                handleDislike(response._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-down\"></i>\r\n              {\" \"}\r\n               {<span>{dislike}</span>}\r\n            </button> */}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\pagination.js",["204"],"import React from 'react'\r\n\r\n\r\nconst pagination = ({postsPerPage,totalPosts, paginate}) => {\r\n    const pageNumber= []\r\n\r\n    for(let i=1;i<=Math.ceil(totalPosts/postsPerPage);i++){\r\n        pageNumber.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {\r\n                    pageNumber.map(number=> (\r\n                        <li  key={number} className='page-item'>\r\n                            <a  onClick={()=> paginate(number)} className='page-link'>{number}</a>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default pagination\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\SideBar.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js",["205","206","207"],"import React, { Fragment, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport QuillEditor from \"../pages/editor/QuillEditor\";\r\nimport {message} from \"antd\"; \r\n\r\n\r\nconst ResponseForm = ({ id }) => {\r\n  const [rep_content, setContent] = useState(\"\");\r\n  const [error, setError] = useState();\r\n  const [files, setFiles] = useState();\r\n\r\n\r\n  // console.log(checkLogin());\r\n  const onEditorChange = (value) =>\r\n  {\r\n    setContent(value);\r\n  } \r\n  const onFilesChange = (files) => {\r\n    setFiles(files)\r\n}\r\n\r\n  const submit = (e) => {\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    const login = true;\r\n    if (token == \"\") {\r\n      message.error('You must be logged in to perform this action.');\r\n\r\n      setTimeout(() => {\r\n         \r\n      }, 2500);\r\n    }\r\n\r\n    const newResponse = {\r\n      rep_content,\r\n    };\r\n    // console.log(id);\r\n    axios\r\n      .post(\"/posts/respond/\" + id, newResponse, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <form onSubmit={submit}>\r\n          <h4 className=\"label text-primary\"> Your answer! </h4>\r\n          {error && (\r\n            <>\r\n              <ErrorNotice\r\n                message={error}\r\n                clearError={() => setError(undefined)}\r\n                link=\"Sign in here\"\r\n              />\r\n            </>\r\n          )}\r\n          {/* <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control full-width\"\r\n              id=\"rep_content\"\r\n              placeholder=\"Content of the response\"\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n          </div> */}\r\n          <div id=\"ql-editor\">\r\n                  <QuillEditor \r\n                  className=\"ql-editor\"\r\n                    placeholder=\"Start Posting Something\"\r\n                    onEditorChange={onEditorChange}\r\n                    onFilesChange={onFilesChange}\r\n                    // onFilesChange={onFilesChange}\r\n\r\n                  />\r\n                </div>\r\n                \r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Post your answer\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResponseForm;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\users\\UserList.js",["208","209","210","211","212","213","214","215"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport profilepic from \"../images/profile_pic.jpg\";\r\nimport axios from \"axios\";\r\nimport Modal from \"antd\";\r\nimport { message, avatar } from \"antd\";\r\n// import Avatar from \"antd/lib/avatar/avatar\";\r\nimport Progress from './Progress';\r\n\r\nexport default function UserList() {\r\n  const userData = useContext(UserContext);\r\n\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [email, setEmail] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [lname, setLn] = useState();\r\n  const [fname, setFn] = useState();\r\n\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [msg, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const [pbvisible, setPbvisible] = useState();\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n    console.log(file);\r\n  };\r\n\r\n  const changePicture = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      setPbvisible(\"visible\");\r\n      const res = await axios.put('/posts/all/users/'+userId+'/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n          // Clear percentage\r\n          setTimeout(() => setUploadPercentage(0), 5000);\r\n          window.location.reload();\r\n\r\n        }\r\n      });\r\n\r\n      const { fileName, filePath } = res.data;\r\n      setUploadedFile({ fileName, filePath });\r\n      message.success(\"Profile updated successfully\");\r\n\r\n      setMessage('File Uploaded');\r\n      console.log(message);\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage('There was a problem with the server');\r\n      console.log(message);\r\n\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      console.log(message);\r\n\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Context UserID\r\n   */\r\n  const userId = userData.userData.user;\r\n  const currentUser = userData;\r\n  console.log(currentUser);\r\n  const getUser = async () => {\r\n       await axios\r\n      .get(\"/posts/all/users/\" + userId)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUserInfo(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // setUserInfo(userinfo);\r\n  };\r\n\r\n  // const [user, setUser] = useState({})\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [userId, file]);\r\n  console.log(\"User Id :\" + userId);\r\n\r\n  //   setPic({pic: e.target.files[0]});\r\n\r\n  const submit = async (e) => {\r\n    // e.preventDefault();\r\n    const user = {\r\n      email,\r\n      username,\r\n      lname,\r\n      fname,\r\n    };\r\n    axios\r\n      .put(\"/posts/all/users/\" + userId, user)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    message.success(\"Profile updated successfully\");\r\n\r\n    //   history.push(\"/posts/all/users\");\r\n\r\n    // console.log(\"submitted\");\r\n  };\r\n\r\n  // console.log(userData.userData.user);\r\n\r\n  if (userInfo) {\r\n    return (\r\n      \r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form className=\"form\" onSubmit={changePicture}>\r\n              <br></br>\r\n              <br></br>\r\n              {/* <Avatar size={64} src={profilepic}>\r\n              </Avatar> */}\r\n              <img\r\n                src={userInfo.pic}\r\n                alt=\"profils pic\"\r\n                width=\"60%\"\r\n                style={{\r\n                  borderRadius: \"150px\",\r\n                  marginTop: \"10%\",\r\n                  marginLeft: \"10%\",\r\n                }}\r\n              />\r\n              <Form.Group controlId=\"formCategory4\">\r\n                {/* <Form.Label>Profile Image</Form.Label> */}\r\n                <Form.Control\r\n                  type=\"file\"\r\n                  name=\"photo\"\r\n                  accept=\".png, .jpg, .jpeg\"\r\n                  style={{\r\n                    borderRadius: \"200px\",\r\n                    marginTop: \"10%\",\r\n                    textAlign: \"center\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n                <div className=' m-auto m mt-4 mb-4'\r\n                 style={{visibility: pbvisible ? 'visible' : 'hidden' }}\r\n                \r\n                >\r\n\r\n                <Progress percentage={uploadPercentage} \r\n               />\r\n                </div>\r\n\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  style={{\r\n                    borderRadius: \"200px\",\r\n                    marginLeft: \"20%\",\r\n                    textAlign: \"center\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  Update your picture\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n            <Col>\r\n              <div>First registered : {userInfo.date}</div>\r\n            </Col>\r\n          </Col>\r\n          <Col>\r\n            <h1>{userInfo.username}</h1>\r\n            <Form className=\"form\" onSubmit={submit}>\r\n              <p> Check your profile, and update your info ! </p>\r\n              <Form.Group controlId=\"formCategory1\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={userInfo.username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formCategory2\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  defaultValue={userInfo.email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formCategory2\">\r\n                <Form.Label>First name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={userInfo.fname}\r\n                  onChange={(e) => setFn(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formCategory2\">\r\n                <Form.Label>Last name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={userInfo.lname}\r\n                  onChange={(e) => setLn(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Update your Profile\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return <Container>Waiting</Container>;\r\n  }\r\n}\r\n\r\n// export default UserList;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\tags\\TagList.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\editor\\QuillEditor.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questionsList.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"import React, { Fragment, useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport QuestionItem from \"../pages/QuestionItem\";\r\nimport Pagination from \"./pagination\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { message } from \"antd\";\r\nimport './pages.css'\r\nimport SideBar from \"../layout/SideBar\";\r\nconst inputstyle = {\r\n  marginTop: \"40px\",\r\n  width: \"70vw\",\r\n  height: \"40px\",\r\n  fontSize: \"20px\",\r\n  paddingLeft: \"10px\",\r\n  margin: \"autp\",\r\n};\r\n\r\nconst active ={\r\n  active : true\r\n}\r\nconst QuestionList = () => {\r\n  const [qsts, setQsts] = useState([]);\r\n  const [filtredQuestions,setfiltredQuestions]=useState(qsts)\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const [visible, setVisible] = useState(3);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(5);\r\n  const [active,setActive] = useState(false)\r\n  const key = qsts;\r\n\r\n  useEffect(() => {\r\n    message.loading({ content: \"Loading...\", key });\r\n    axios\r\n      .get(\"/posts/all\")\r\n      .then((res) => {\r\n        setQsts(res.data);\r\n        setfiltredQuestions(res.data)\r\n        setTimeout(() => {\r\n          message.success({ content: \"Loaded!\", key, duration: 1 });\r\n        }, 700);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const questionsByFilter = (e)=>{\r\n   if(e==='unanswred')\r\n   { const filtredbyanswer = qsts.filter(qst => qst.responses.length<=0)\r\n \r\n    setfiltredQuestions(filtredbyanswer)\r\n    setActive(true)\r\n   }\r\n\r\n    if(e==='answred'){\r\n      const filtred = qsts.filter(qst => qst.qst_likes.length>2)\r\n \r\n      setfiltredQuestions(filtred)\r\n   \r\n    }\r\n    if(e==='newest'){\r\n      setfiltredQuestions(qsts)\r\n    }\r\n    \r\n  }\r\n  const loadmore = () => {\r\n    setVisible(qsts.length);\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = qsts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\r\n\r\n  let btnA = active ? 'active' : ''\r\n\r\n  return (\r\n   \r\n    <Fragment>\r\n    \r\n      <div className=\"container-fluid\">\r\n      \r\n        <div className='col-lg container'>\r\n          <div class=\"input-group md-form form-sm form-2 pl-0 head row\">\r\n            <input\r\n              class=\"form-control my-0 py-1 red-border\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              placeholder=\"Search...\"\r\n              onChange={(Event) => setSearchItem(Event.target.value)}\r\n            />\r\n          <div class=\"input-group-append\">\r\n            {/* <span class=\"input-group-text red lighten-3\" id=\"basic-text1\">\r\n              <i aria-hidden=\"true\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n\r\n              </i>\r\n            </span> */}\r\n          </div>\r\n        </div>\r\n\r\n        \r\n          \r\n        <div className='row container'>\r\n            <h1 className=\"title md\">{filtredQuestions.length} Questions </h1>\r\n        </div>\r\n        <div className='row container'>\r\n          <div>\r\n            <i  onClick={(e)=>questionsByFilter('newest')} className='btn btn-light active' >Newest</i>\r\n            <i onClick={(e)=>questionsByFilter('answred')} className='btn btn-light'>Most liked</i>\r\n            <i onClick={(e)=>questionsByFilter('unanswred')} className='btn btn-light' >Unanswerd</i>\r\n          \r\n          </div>\r\n        </div>\r\n\r\n        {filtredQuestions\r\n          .filter((qst) => {\r\n            if (searchItem === \"\") {\r\n              return qst;\r\n            } else if (\r\n              qst.qst_title.toLowerCase().includes(searchItem.toLowerCase())\r\n            ) {\r\n              return qst;\r\n            }\r\n          })\r\n          .slice(indexOfFirstPost, indexOfLastPost)\r\n          .map((qst) => (\r\n            <QuestionItem key={qst._id} qst={qst} />\r\n          ))}\r\n\r\n          {searchItem === \"\" && (\r\n            <Pagination\r\n              postsPerPage={postsPerPage}\r\n              totalPosts={qsts.length}\r\n              paginate={paginate}\r\n            />\r\n          )}\r\n\r\n          {/* <div>\r\n            {visible < qsts.length &&\r\n              <button className='btn btn-success' onClick={loadmore}>See more</button>}\r\n          </div> */}\r\n            </div>\r\n          </div>\r\n        \r\n    </Fragment>\r\n  );\r\n};\r\nexport default QuestionList;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\users\\Progress.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\SideBarData.js",["232","233","234","235","236"],"import React from 'react'\r\n// import HomeIcon from '@material-ui/icons/Home'\r\nimport profilepic from \"../images/profile_pic.jpg\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport Axios from 'axios';\r\nimport {useState, useContext} from 'react';\r\n\r\n\r\n\r\nexport const  SideBarData= [\r\n    {\r\n        title: 'HomePage',\r\n        // icon: <HomeIcon/>,\r\n        link: '/posts/all'\r\n    },\r\n    {\r\n        title: 'Tags',\r\n       \r\n        link: '/posts/all/tags'\r\n    },\r\n    {\r\n        title: 'Profile',\r\n        icon: <Avatar src={profilepic} size='60' />,\r\n        link: '/posts/all/users'\r\n    }\r\n]\r\n\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\ListUsers\\UserDetail.js",["237","238","239","240","241"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\ListUsers\\Users.js",["242"],"import React ,{useState,useContext,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport UserItem from './UserItem'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction Users() {\r\n    const [users,setUsers]= useState()\r\n    useEffect(()=>{\r\n        try{\r\n            \r\n            axios.get('http://localhost:5000/api/user/users',{\r\n                headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n              }).then(res=> setUsers(res.data)).catch(err=> console.log(err))\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    })\r\n    if(users){\r\n    return (\r\n        <div className=\"container\">\r\n             <div className=\"row\">\r\n                <h4 style={{justifyContent:\"center\"}}>List of users</h4>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div style={{backgroundSize: \"cover\"}} className=\"col-lg-12\">\r\n                    <div style={{ display: \"flex\",  flexWrap: \"wrap\",justifyContent: \"center\"}}>\r\n                        {users.map((value,key)=>(\r\n                            <div  style={{padding: \"10px\",margin:\"10px\",width:\"25%\",cursor:\"pointer\",borderColor:'black'}}>\r\n                                    <UserItem user={value}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n    )}else{\r\n        return(\r\n            <div>loading</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\ListUsers\\UserItem.js",["243"],"import React from 'react'\r\nimport img from '../../components/images/avatar.png'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/esm/Card';\r\nfunction UserItem(props) {\r\n    return (\r\n        <div className=\"row\">\r\n            \r\n                <Card style={{width:\"100%\", margin:\"0 5px\"}}>\r\n                    <div className=\"row\">\r\n                        <div style={{width:\"50%\"}}>\r\n                            <img src={props.user.pic} className=\"img-fluid\" style={{width:\"80px\", height:\"80px\"}} />\r\n                        </div>\r\n                        <div>\r\n                            <Link to={`/posts/all/UserslList/user/${props.user._id}`} >\r\n                                <Card.Text>{props.user.fname} {props.user.lname}</Card.Text>\r\n                                \r\n                            </Link>\r\n                            <Card.Text style={{fontSize:\"10px\"}}>{props.user.username}</Card.Text>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n           \r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default UserItem\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\tags\\TagDetail.js",["244","245","246","247","248","249"],{"ruleId":"250","severity":1,"message":"251","line":21,"column":9,"nodeType":"252","messageId":"253","endLine":21,"endColumn":20},{"ruleId":"250","severity":1,"message":"254","line":24,"column":10,"nodeType":"252","messageId":"253","endLine":24,"endColumn":18},{"ruleId":"250","severity":1,"message":"255","line":24,"column":20,"nodeType":"252","messageId":"253","endLine":24,"endColumn":31},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"250","severity":1,"message":"260","line":1,"column":27,"nodeType":"252","messageId":"253","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"261","line":2,"column":8,"nodeType":"252","messageId":"253","endLine":2,"endColumn":20},{"ruleId":"250","severity":1,"message":"262","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":13},{"ruleId":"250","severity":1,"message":"263","line":13,"column":10,"nodeType":"252","messageId":"253","endLine":13,"endColumn":20},{"ruleId":"250","severity":1,"message":"264","line":32,"column":9,"nodeType":"252","messageId":"253","endLine":32,"endColumn":13},{"ruleId":"265","severity":1,"message":"266","line":39,"column":9,"nodeType":"267","endLine":39,"endColumn":50},{"ruleId":"250","severity":1,"message":"268","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":16},{"ruleId":"250","severity":1,"message":"269","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":13},{"ruleId":"250","severity":1,"message":"270","line":6,"column":10,"nodeType":"252","messageId":"253","endLine":6,"endColumn":14},{"ruleId":"250","severity":1,"message":"271","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":33,"column":13,"nodeType":"267","endLine":33,"endColumn":28},{"ruleId":"250","severity":1,"message":"274","line":4,"column":16,"nodeType":"252","messageId":"253","endLine":4,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":27,"column":6,"nodeType":"277","endLine":27,"endColumn":8,"suggestions":"278"},{"ruleId":"250","severity":1,"message":"260","line":1,"column":39,"nodeType":"252","messageId":"253","endLine":1,"endColumn":48},{"ruleId":"250","severity":1,"message":"279","line":24,"column":10,"nodeType":"252","messageId":"253","endLine":24,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":52,"column":17,"nodeType":"282","messageId":"283","endLine":52,"endColumn":19},{"ruleId":"250","severity":1,"message":"260","line":1,"column":27,"nodeType":"252","messageId":"253","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"284","line":1,"column":48,"nodeType":"252","messageId":"253","endLine":1,"endColumn":58},{"ruleId":"250","severity":1,"message":"285","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":13},{"ruleId":"250","severity":1,"message":"261","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":20},{"ruleId":"250","severity":1,"message":"286","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":18},{"ruleId":"250","severity":1,"message":"287","line":7,"column":10,"nodeType":"252","messageId":"253","endLine":7,"endColumn":18},{"ruleId":"250","severity":1,"message":"288","line":8,"column":10,"nodeType":"252","messageId":"253","endLine":8,"endColumn":25},{"ruleId":"250","severity":1,"message":"289","line":9,"column":10,"nodeType":"252","messageId":"253","endLine":9,"endColumn":17},{"ruleId":"250","severity":1,"message":"290","line":12,"column":35,"nodeType":"252","messageId":"253","endLine":12,"endColumn":41},{"ruleId":"250","severity":1,"message":"291","line":20,"column":7,"nodeType":"252","messageId":"253","endLine":20,"endColumn":17},{"ruleId":"250","severity":1,"message":"292","line":29,"column":7,"nodeType":"252","messageId":"253","endLine":29,"endColumn":13},{"ruleId":"250","severity":1,"message":"293","line":33,"column":16,"nodeType":"252","messageId":"253","endLine":33,"endColumn":23},{"ruleId":"250","severity":1,"message":"294","line":34,"column":10,"nodeType":"252","messageId":"253","endLine":34,"endColumn":26},{"ruleId":"250","severity":1,"message":"263","line":35,"column":10,"nodeType":"252","messageId":"253","endLine":35,"endColumn":20},{"ruleId":"250","severity":1,"message":"295","line":35,"column":22,"nodeType":"252","messageId":"253","endLine":35,"endColumn":35},{"ruleId":"250","severity":1,"message":"296","line":36,"column":10,"nodeType":"252","messageId":"253","endLine":36,"endColumn":14},{"ruleId":"250","severity":1,"message":"297","line":36,"column":16,"nodeType":"252","messageId":"253","endLine":36,"endColumn":23},{"ruleId":"250","severity":1,"message":"298","line":37,"column":10,"nodeType":"252","messageId":"253","endLine":37,"endColumn":17},{"ruleId":"250","severity":1,"message":"299","line":39,"column":24,"nodeType":"252","messageId":"253","endLine":39,"endColumn":39},{"ruleId":"250","severity":1,"message":"292","line":40,"column":10,"nodeType":"252","messageId":"253","endLine":40,"endColumn":16},{"ruleId":"250","severity":1,"message":"300","line":41,"column":9,"nodeType":"252","messageId":"253","endLine":41,"endColumn":12},{"ruleId":"250","severity":1,"message":"301","line":57,"column":9,"nodeType":"252","messageId":"253","endLine":57,"endColumn":26},{"ruleId":"250","severity":1,"message":"302","line":76,"column":9,"nodeType":"252","messageId":"253","endLine":76,"endColumn":17},{"ruleId":"250","severity":1,"message":"303","line":82,"column":9,"nodeType":"252","messageId":"253","endLine":82,"endColumn":21},{"ruleId":"250","severity":1,"message":"304","line":84,"column":9,"nodeType":"252","messageId":"253","endLine":84,"endColumn":17},{"ruleId":"305","severity":1,"message":"306","line":7,"column":13,"nodeType":"267","endLine":7,"endColumn":16},{"ruleId":"250","severity":1,"message":"270","line":3,"column":9,"nodeType":"252","messageId":"253","endLine":3,"endColumn":13},{"ruleId":"250","severity":1,"message":"307","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":19},{"ruleId":"250","severity":1,"message":"308","line":17,"column":9,"nodeType":"252","messageId":"253","endLine":17,"endColumn":11},{"ruleId":"250","severity":1,"message":"309","line":19,"column":10,"nodeType":"252","messageId":"253","endLine":19,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":45,"column":15,"nodeType":"282","messageId":"283","endLine":45,"endColumn":17},{"ruleId":"250","severity":1,"message":"271","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":19},{"ruleId":"250","severity":1,"message":"310","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":14},{"ruleId":"275","severity":1,"message":"311","line":31,"column":6,"nodeType":"277","endLine":31,"endColumn":8,"suggestions":"312"},{"ruleId":"250","severity":1,"message":"309","line":11,"column":10,"nodeType":"252","messageId":"253","endLine":11,"endColumn":17},{"ruleId":"250","severity":1,"message":"313","line":12,"column":10,"nodeType":"252","messageId":"253","endLine":12,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":17,"column":15,"nodeType":"282","messageId":"283","endLine":17,"endColumn":17},{"ruleId":"250","severity":1,"message":"314","line":36,"column":9,"nodeType":"252","messageId":"253","endLine":36,"endColumn":22},{"ruleId":"305","severity":1,"message":"306","line":16,"column":29,"nodeType":"267","endLine":16,"endColumn":87},{"ruleId":"250","severity":1,"message":"279","line":11,"column":10,"nodeType":"252","messageId":"253","endLine":11,"endColumn":15},{"ruleId":"250","severity":1,"message":"315","line":25,"column":11,"nodeType":"252","messageId":"253","endLine":25,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":26,"column":15,"nodeType":"282","messageId":"283","endLine":26,"endColumn":17},{"ruleId":"250","severity":1,"message":"274","line":3,"column":10,"nodeType":"252","messageId":"253","endLine":3,"endColumn":20},{"ruleId":"250","severity":1,"message":"316","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":18},{"ruleId":"250","severity":1,"message":"317","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":13},{"ruleId":"250","severity":1,"message":"318","line":8,"column":19,"nodeType":"252","messageId":"253","endLine":8,"endColumn":25},{"ruleId":"250","severity":1,"message":"319","line":22,"column":10,"nodeType":"252","messageId":"253","endLine":22,"endColumn":18},{"ruleId":"250","severity":1,"message":"320","line":23,"column":10,"nodeType":"252","messageId":"253","endLine":23,"endColumn":22},{"ruleId":"250","severity":1,"message":"321","line":24,"column":10,"nodeType":"252","messageId":"253","endLine":24,"endColumn":13},{"ruleId":"275","severity":1,"message":"322","line":98,"column":6,"nodeType":"277","endLine":98,"endColumn":20,"suggestions":"323"},{"ruleId":"250","severity":1,"message":"284","line":1,"column":48,"nodeType":"252","messageId":"253","endLine":1,"endColumn":58},{"ruleId":"250","severity":1,"message":"287","line":6,"column":10,"nodeType":"252","messageId":"253","endLine":6,"endColumn":18},{"ruleId":"250","severity":1,"message":"288","line":7,"column":10,"nodeType":"252","messageId":"253","endLine":7,"endColumn":25},{"ruleId":"250","severity":1,"message":"324","line":10,"column":8,"nodeType":"252","messageId":"253","endLine":10,"endColumn":15},{"ruleId":"250","severity":1,"message":"291","line":11,"column":7,"nodeType":"252","messageId":"253","endLine":11,"endColumn":17},{"ruleId":"250","severity":1,"message":"292","line":20,"column":7,"nodeType":"252","messageId":"253","endLine":20,"endColumn":13},{"ruleId":"250","severity":1,"message":"296","line":27,"column":10,"nodeType":"252","messageId":"253","endLine":27,"endColumn":14},{"ruleId":"250","severity":1,"message":"297","line":27,"column":16,"nodeType":"252","messageId":"253","endLine":27,"endColumn":23},{"ruleId":"250","severity":1,"message":"298","line":28,"column":10,"nodeType":"252","messageId":"253","endLine":28,"endColumn":17},{"ruleId":"250","severity":1,"message":"299","line":30,"column":24,"nodeType":"252","messageId":"253","endLine":30,"endColumn":39},{"ruleId":"275","severity":1,"message":"325","line":46,"column":6,"nodeType":"277","endLine":46,"endColumn":8,"suggestions":"326"},{"ruleId":"250","severity":1,"message":"302","line":65,"column":9,"nodeType":"252","messageId":"253","endLine":65,"endColumn":17},{"ruleId":"250","severity":1,"message":"303","line":71,"column":9,"nodeType":"252","messageId":"253","endLine":71,"endColumn":21},{"ruleId":"250","severity":1,"message":"327","line":75,"column":7,"nodeType":"252","messageId":"253","endLine":75,"endColumn":11},{"ruleId":"328","severity":1,"message":"329","line":87,"column":15,"nodeType":"330","endLine":87,"endColumn":38},{"ruleId":"331","severity":1,"message":"332","line":127,"column":27,"nodeType":"333","messageId":"334","endLine":127,"endColumn":29},{"ruleId":"250","severity":1,"message":"316","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":18},{"ruleId":"250","severity":1,"message":"310","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":14},{"ruleId":"250","severity":1,"message":"262","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":13},{"ruleId":"250","severity":1,"message":"335","line":9,"column":9,"nodeType":"252","messageId":"253","endLine":9,"endColumn":17},{"ruleId":"250","severity":1,"message":"284","line":9,"column":19,"nodeType":"252","messageId":"253","endLine":9,"endColumn":29},{"ruleId":"250","severity":1,"message":"307","line":9,"column":10,"nodeType":"252","messageId":"253","endLine":9,"endColumn":19},{"ruleId":"250","severity":1,"message":"336","line":12,"column":8,"nodeType":"252","messageId":"253","endLine":12,"endColumn":11},{"ruleId":"275","severity":1,"message":"337","line":68,"column":13,"nodeType":"333","endLine":98,"endColumn":4},{"ruleId":"275","severity":1,"message":"338","line":98,"column":6,"nodeType":"277","endLine":98,"endColumn":8,"suggestions":"339"},{"ruleId":"280","severity":1,"message":"281","line":241,"column":47,"nodeType":"282","messageId":"283","endLine":241,"endColumn":49},{"ruleId":"250","severity":1,"message":"284","line":1,"column":25,"nodeType":"252","messageId":"253","endLine":1,"endColumn":35},{"ruleId":"265","severity":1,"message":"266","line":12,"column":13,"nodeType":"267","endLine":16,"endColumn":15},{"ruleId":"250","severity":1,"message":"340","line":14,"column":10,"nodeType":"252","messageId":"253","endLine":14,"endColumn":16},{"ruleId":"250","severity":1,"message":"341","line":15,"column":10,"nodeType":"252","messageId":"253","endLine":15,"endColumn":19},{"ruleId":"250","severity":1,"message":"293","line":16,"column":16,"nodeType":"252","messageId":"253","endLine":16,"endColumn":23},{"ruleId":"275","severity":1,"message":"337","line":19,"column":13,"nodeType":"333","endLine":44,"endColumn":4},{"ruleId":"331","severity":1,"message":"342","line":27,"column":27,"nodeType":"333","messageId":"343","endLine":27,"endColumn":29},{"ruleId":"275","severity":1,"message":"344","line":44,"column":6,"nodeType":"277","endLine":44,"endColumn":8,"suggestions":"345"},"no-unused-vars","'getQuestion' is assigned a value but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","no-native-reassign",["346"],"no-negated-in-lhs",["347"],"'useEffect' is defined but never used.","'QuestionItem' is defined but never used.","'Axios' is defined but never used.","'searchItem' is assigned a value but never used.","'qsts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Register' is defined but never used.","'Login' is defined but never used.","'Link' is defined but never used.","'ErrorNotice' is defined but never used.","react/jsx-pascal-case","Imported JSX component Post_question must be in PascalCase or SCREAMING_SNAKE_CASE","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.id' and 'questionId'. Either include them or remove the dependency array.","ArrayExpression",["348"],"'files' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'axios' is defined but never used.","'Pagination' is defined but never used.","'faSearch' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'message' is defined but never used.","'Switch' is defined but never used.","'inputstyle' is assigned a value but never used.","'active' is assigned a value but never used.","'setQsts' is assigned a value but never used.","'filtredQuestions' is assigned a value but never used.","'setSearchItem' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'visible' is assigned a value but never used.","'setPostsPerPage' is assigned a value but never used.","'key' is assigned a value but never used.","'questionsByFilter' is assigned a value but never used.","'loadmore' is assigned a value but never used.","'currentPosts' is assigned a value but never used.","'paginate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'dt' is assigned a value but never used.","'dislike' is assigned a value but never used.","'Avatar' is defined but never used.","React Hook useEffect has missing dependencies: 'author' and 'question'. Either include them or remove the dependency array.",["349"],"'error' is assigned a value but never used.","'handleDislike' is assigned a value but never used.","'login' is assigned a value but never used.","'profilepic' is defined but never used.","'Modal' is defined but never used.","'avatar' is defined but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'msg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["350"],"'SideBar' is defined but never used.","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["351"],"'btnA' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'img' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'match.params.id' and 'userData.userData.user'. Either include them or remove the dependency array.",["352"],"'mytags' is assigned a value but never used.","'questions' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'match.params.tagname', 'qstids', and 'qsts'. Either include them or remove the dependency array.",["353"],"no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},"Update the dependencies array to be: [match.params.id, questionId]",{"range":"366","text":"367"},"Update the dependencies array to be: [author, question]",{"range":"368","text":"369"},"Update the dependencies array to be: [userId, file, getUser]",{"range":"370","text":"371"},"Update the dependencies array to be: [key]",{"range":"372","text":"373"},"Update the dependencies array to be: [match.params.id, userData.userData.user]",{"range":"374","text":"375"},"Update the dependencies array to be: [match.params.tagname, qstids, qsts]",{"range":"376","text":"377"},[865,867],"[match.params.id, questionId]",[954,956],"[author, question]",[3018,3032],"[userId, file, getUser]",[1496,1498],"[key]",[2919,2921],"[match.params.id, userData.userData.user]",[1431,1433],"[match.params.tagname, qstids, qsts]"]