[{"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js":"1","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js":"2","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js":"3","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js":"4","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js":"5","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js":"6","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js":"7","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js":"8","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js":"9","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js":"10","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js":"11","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js":"12","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js":"13","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js":"14","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js":"15","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js":"16","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js":"17","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js":"18"},{"size":150,"mtime":1608576882057,"results":"19","hashOfConfig":"20"},{"size":2616,"mtime":1609281817392,"results":"21","hashOfConfig":"20"},{"size":714,"mtime":1609330310199,"results":"22","hashOfConfig":"20"},{"size":324,"mtime":1608659093117,"results":"23","hashOfConfig":"20"},{"size":5175,"mtime":1609195455428,"results":"24","hashOfConfig":"20"},{"size":75,"mtime":1608589240348,"results":"25","hashOfConfig":"20"},{"size":2676,"mtime":1609195601614,"results":"26","hashOfConfig":"20"},{"size":3115,"mtime":1609364106745,"results":"27","hashOfConfig":"20"},{"size":3640,"mtime":1609280144132,"results":"28","hashOfConfig":"20"},{"size":240,"mtime":1608659378737,"results":"29","hashOfConfig":"20"},{"size":1371,"mtime":1608929261776,"results":"30","hashOfConfig":"20"},{"size":539,"mtime":1608983842355,"results":"31","hashOfConfig":"20"},{"size":478,"mtime":1609282064095,"results":"32","hashOfConfig":"20"},{"size":1619,"mtime":1609239063916,"results":"33","hashOfConfig":"20"},{"size":3198,"mtime":1609283426828,"results":"34","hashOfConfig":"20"},{"size":1765,"mtime":1609285233615,"results":"35","hashOfConfig":"20"},{"size":1367,"mtime":1609274735277,"results":"36","hashOfConfig":"20"},{"size":971,"mtime":1609279231229,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"lll919",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js",[],["86","87"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js",["88","89"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport QuestionItem from \"../pages/QuestionItem\";\r\n\r\nconst Questions = () => {\r\n  const [qsts, setQsts] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/posts/all\")\r\n      .then((res) => {\r\n        setQsts(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <h1 className=\"label text-primary\">Questions </h1>\r\n        {qsts.map((qst) => (\r\n          <QuestionItem key={qst._id} qst={qst} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Questions;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js",["90"],"import React, { useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { Fragment } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nfunction Register() {\r\n  /** Tracking the states of the form */\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [fname, setFirstName] = useState();\r\n  const [lname, setLastName] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const [success, setSuccess] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const { setUserData } = useContext(UserContext);\r\n  // const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = {\r\n        username,\r\n        fname,\r\n        lname,\r\n        email,\r\n        password,\r\n        passwordCheck,\r\n      };\r\n      await Axios.post(\"http://localhost:5000/api/user/register\", newUser);\r\n\r\n      const loginRes = await Axios.post(\r\n        \"http://localhost:5000/api/user/login\",\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.id,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      //  console.log(loginRes.data.user.id);\r\n      if (loginRes.data.token) {\r\n        setSuccess(\"Account created successfully. Welcome aboard !\");\r\n      }\r\n      // history.push(\"/\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n    // window.location.reload(false);\r\n    // console.log(loginRes);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <section>\r\n          <h1 className=\"label text-primary\">Sign Up</h1>\r\n          {success && (\r\n            <SuccessNotice\r\n              message={success}\r\n              clearError={() => setSuccess(undefined)}\r\n            />\r\n          )}\r\n      \r\n          {error && (\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n            />\r\n          )}\r\n\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i> Sign Into Your Account\r\n          </p>\r\n          <form onSubmit={submit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputusername\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-username\"\r\n                placeholder=\"Username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputLastName\">Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-lastname\"\r\n                placeholder=\"Doe\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputFirstName\">First name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-firstname\"\r\n                placeholder=\"Jane\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputemail\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"reg-email\"\r\n                placeholder=\"email@gmail.com\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password\"\r\n                placeholder=\"******\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password-vf\"\r\n                placeholder=\"Verify Password\"\r\n                onChange={(e) => setPasswordCheck(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" value=\"Register\" className=\"btn btn-primary\">\r\n              Register\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?\r\n            <Link to=\"/login\"> Sign in</Link>\r\n          </p>\r\n        </section>\r\n      </div>\r\n      <Footer></Footer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js",["91"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js",["92","93","94","95"],"import React, { Fragment, useState } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction QuestionItem({ qst }) {\r\n  /**\r\n   * Here we Initialize the states with the Number values :\r\n   *  Like & dislike which we call in the render method\r\n   */\r\n  const [like, setlikes] = useState([qst.qst_likes.length]);\r\n  const [dislike, setdislikes] = useState([qst.qst_dislikes.length]);\r\n\r\n  //   useEffect(() => {\r\n  //     axios.get('h')\r\n  //     .then(res => {setQsts(res.data) })\r\n  //     .catch(err => console.log(err))\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/posts/like\")\r\n  //     .then((res) => {\r\n  //       setQsts(res.data);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n\r\n  const handleLike = (id) => {\r\n    // const id = _id;\r\n    axios\r\n      .put(\"/posts/like/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((result) => {\r\n        // console.log(result.data.qst_likes.length);\r\n        setlikes(result.data.qst_likes.length);\r\n        setdislikes(result.data.qst_dislikes.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDislike = (id) => {\r\n    axios\r\n      .put(\"/posts/unlike/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((result) => {\r\n        /**\r\n         * Here the result displays the dislikes.lenght\r\n         */\r\n        // console.log(result.data.qst_likes.length);\r\n        setlikes(result.data.qst_likes.length);\r\n        setdislikes(result.data.qst_dislikes.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: \"70vw\" ,borderColor:'black', margin:'5px'}}>\r\n        <Card.Body>\r\n          <Card.Title>{qst.qst_title}</Card.Title>\r\n          \r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Asked by :<Card.Link href=\"#LinktoUser\"> {qst.username} </Card.Link>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted\">\r\n            {\" \"}\r\n            On : {qst.asked_date.substring(0, 10)}{\" \"}\r\n          </Card.Subtitle>\r\n          <Card.Text>{qst.qst_content}</Card.Text>\r\n          <div className=\"ml-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-2\"\r\n              onClick={() => {\r\n                handleLike(qst._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-up\"></i>\r\n\r\n              <span> {like} </span>\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                handleDislike(qst._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-down\"></i>{\" \"}\r\n              {qst.qst_dislikes.length > 0 && <span> {dislike}</span>}\r\n            </button> */}\r\n            <Link to={`/posts/${qst._id}`} \r\n            className=\"btn btn-outline-success margin\"\r\n           >\r\n              View answers{\" \"}\r\n              {qst.responses.length > 0 && (\r\n                <span className=\"comment-count\">{qst.responses.length}</span>\r\n              )}\r\n            </Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <>\r\n      <br></br>\r\n      </>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuestionItem;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js",["96"],"import React from 'react'\n\nfunction Footer() {\n    return (\n        <div className=\"footer-copyright text-center py-3 bg-light\" id=\"footer\">© 2020 Copyright:\n            <a> EnsiasOverflow</a>\n        </div>\n    )\n}\n\nexport default Footer\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js",["97","98"],"import React, {useContext} from \"react\";\r\nimport UserContext from \"../../context/UserContext\"; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Questions from \"../pages/questions\";\r\nexport default function Options() {\r\n\r\n    const {userData, setUserData} = useContext(UserContext);\r\n\r\n    const History = useHistory();\r\n  /**\r\n   * Interact with the history in the URL bar\r\n   */\r\n  const register = () => History.push(\"/register\");\r\n  const login = () => History.push(\"/login\");\r\n  const ask = () => History.push(\"/posts/ask\");\r\n  const Questions = () => History.push(\"/posts/all\")\r\n\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n}\r\n\r\n\r\n  return (\r\n\r\n    <nav className=\"auth-options\">\r\n \r\n      {userData.user ? (\r\n        <>      \r\n        {/* We need to add the dynamic search bar  */}\r\n        <button onClick={Questions}>Questions</button> \r\n        <button onClick={ask}>Ask a question</button> \r\n        <button onClick={logout}>Log out</button> \r\n        </>\r\n        ) : (\r\n        <>\r\n        <button onClick={Questions}>Questions</button>\r\n          <button onClick={register}>Register</button>\r\n          <button onClick={login}>Log in</button>\r\n         \r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js",["99"],"import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function SuccessNotice(props) {\r\n    return (\r\n        <div>\r\n            <Alert variant='success' id='succ_message'>\r\n            <span> {props.message} \r\n            {/* <Link id='link_signin' to=\"/login\"> <br/> Sign in Now</Link> */}\r\n            </span>\r\n            \r\n            {/* <button onClick={props.clearError}>X</button>          */}\r\n            \r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js",["100"],"import React, { Fragment, useState,useEffect} from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport QuestionItem from \"../Question/QuestionItem\"\nimport ResponseForm from './ResponseForm'\nimport ResponseItem from './ResponseItem'\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios'\n\n\nconst Question =({match}) => {\n    const [question,setQuestion] = useState({})\n    const [responses,setResponses] = useState([])\n    const questionId = match.params.id;\n    useEffect(()=>{\n        axios.get('/posts/'+questionId)\n        .then(res => {setQuestion(res.data) })\n        .catch(err => console.log(err))\n        axios.get('http://localhost:5000/api/posts/reponses/'+match.params.id).then(res => setResponses(res.data)).catch()\n    },[])\n    return (\n        <Fragment>\n            \n            <div className=\"container\" >\n                <Link to='/posts/all'><i className=\"fa fa-arrow-left\"></i>Back to questions</Link>\n                <QuestionItem question={question}/>\n            <div>\n            <div className=\"border m-2\"></div>\n                <p className=\"\">{responses.length} answers</p>\n                    \n                    {responses.map(response => (\n                        <ResponseItem  key={response._id} questionId={questionId}\n                        response={response} />\n\n                    \n                    \n                    ))}\n            </div>\n            <div className=\"border m-2\"></div>\n            <ResponseForm id={question._id}/>\n            </div>\n                \n           \n            \n        </Fragment>\n    )\n}\n\nexport default Question\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js",["101","102","103","104","105","106"],"import React, { Fragment, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\nimport {Link} from 'react-router-dom';\n\nconst ResponseItem = ({ response, questionId }) => {\n  const [isLiked, updateLike] = useState(false);\n  const [like, setlikes] = useState([response.rep_likes.length]);\n  const [dislike, setdislikes] = useState([response.rep_dislikes.length]);\n  const [error, setError] = useState();\n  // const { setUserData } = useContext(UserContext);\n  const handleLike = (res_id) => {\n    const id = res_id;\n    const token = localStorage.getItem(\"auth-token\")\n    if (token == \"\")\n    {\n      setError(\"You need to be logged in to like a response.\")\n    }\n    axios\n      .put(\"/posts/like/\" + questionId + \"/responses/\" + id, null, \n      {\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\n      })\n      .then((res) => {\n        console.log(res.data.rep_likes.length);\n        setlikes(res.data.rep_likes.length);\n        setdislikes(res.data.rep_dislikes.length);\n      })\n      .catch((err) =>  err.response.data.msg && setError(err.response.data.msg));\n  };\n  \n\n  const handleDislike = (res_id) => {\n    const id = res_id;\n    axios\n      .put(\"/posts/unlike/\" + questionId + \"/responses/\" + id, null, {\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\n      })\n      .then((res) => {\n        // console.log(res.data);\n        setlikes(res.data.rep_likes.length);\n        setdislikes(res.data.rep_dislikes.length);\n      })\n      .catch((err) => console.log(err));\n    console.log(id);\n  };\n  return (\n    <Fragment>\n      <Card style={{ width: \"70vw\", margin: \"5px\", borderColor: \"black\" }}>\n      \n        <Card.Body>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n           Answered by :<Card.Link href=\"#LinktoUser\"> {response.username} </Card.Link>\n          </Card.Subtitle>\n          <Card.Subtitle className=\"mb-1 text-muted\">\n            {\" \"}\n            On : {response.rep_date.substring(0, 10)}{\" \"}\n          </Card.Subtitle>\n          <Card.Text>{response.rep_content}</Card.Text>\n          <div className=\"ml-auto\">\n    \n          {error && (<>\n            <ErrorNotice\n              message={error}\n              clearError={() => setError(undefined)}\n              link =\"Sign in here\"\n            />\n          </>\n           \n          )}\n\n            <button\n              type=\"button\"\n              className=\"btn btn-success mr-2\"\n              value={response._id}\n              onClick={() => {\n                handleLike(response._id);\n              }}\n            >\n              <i className=\"fa fa-thumbs-up\"></i>{\" \"}\n              <span>{like}</span>\n            </button>\n            {/* <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={() => {\n                handleDislike(response._id);\n              }}\n            >\n              <i className=\"fa fa-thumbs-down\"></i>\n              {\" \"}\n               {<span>{dislike}</span>}\n            </button> */}\n          </div>\n        </Card.Body>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default ResponseItem;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js",["107","108"],"import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\n\nconst ResponseForm = ({ id }) => {\n\n  \n  const [rep_content, setContent] = useState(\"\");\n  const [error, setError] = useState();\n  \n\n  // console.log(checkLogin());\n  \n  const submit = (e) => {\n\n    const token = localStorage.getItem(\"auth-token\")\n    const login = true;\n    if (token == \"\")\n    {\n      setError(\"You need to be logged in to add an answer.\")\n      \n    }\n\n      const newResponse = {\n        rep_content,\n      };\n      // console.log(id);\n      axios.post(\"/posts/respond/\" + id, newResponse, {\n          headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\n        })\n        .then((res) => console.log(res.data))\n        .catch((err) =>  err.response.data.msg && setError(err.response.data.msg));\n \n  };\n\n\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n      \n        <form onSubmit={submit}>\n          <h4 className=\"label text-primary\"> Your answer! </h4>\n          {error && (<>\n            <ErrorNotice\n              message={error}\n              clearError={() => setError(undefined)}\n              link =\"Sign in here\"\n            />\n          </>\n           \n          )}\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control full-width\"\n              id=\"rep_content\"\n              placeholder=\"Content of the response\"\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Post your answer\n          </button>\n          \n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ResponseForm;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js",["109"],"import React,{Fragment} from 'react'\nimport Card from \"react-bootstrap/Card\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\n\nconst QuestionItem =({question}) => {\n    return (\n      \n        <Fragment>\n          <h3 className=''>{question.qst_title}</h3>\n        <Card style={{ width: \"70vw\" ,borderColor:'black'}}>\n          <Card.Body>\n\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              Asked by :<Card.Link href=\"#LinktoUser\"> {question.username}</Card.Link>\n            </Card.Subtitle>\n            <Card.Subtitle className=\"mb-1 text-muted\">             \n              On : {question.asked_date}\n            </Card.Subtitle>\n            <Card.Text>{question.qst_content}</Card.Text>\n            {/* <div className=\"ml-auto\">\n              <span type=\"button\" className=\"btn btn-success mr-2\"  >\n                <i className=\"fa fa-thumbs-up\"></i> {' '}\n                {question.qst_likes.length >0 && <span>{question.qst_likes.length}</span>} \n              </span>\n              <span type=\"button\" className=\"btn btn-success\">\n                <i className=\"fa fa-thumbs-down\"></i> {' '}\n                {question.qst_dislikes.length >0 && <span>{question.qst_dislikes.length}</span>} \n              </span>\n             \n            </div> */}\n          </Card.Body>\n        </Card>\n      </Fragment>\n    )\n}\n\nexport default QuestionItem\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js",["110","111","112","113","114"],"import React from 'react';\r\nimport {Fragment} from 'react';\r\nimport Register from '../auth/reg' ;\r\nimport Login from '../auth/login';\r\nimport Footer from './Footer';\r\nimport {Link} from \"react-router-dom\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\"\r\nimport Post_question from \"../pages/post_question\"\r\nexport default function home() {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg logan\">\r\n                        <h1 className=\"label\">Bienvenue au EnsiasOverflow</h1>\r\n                        <p>Votre propre monde professionel</p>\r\n                    </div>\r\n                    <div className=\"col-lg\">\r\n                        {/* <Login/> */}\r\n                        <Post_question></Post_question>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            <Footer/>\r\n\r\n\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":7,"column":10,"nodeType":"121","messageId":"122","endLine":7,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":7,"column":16,"nodeType":"121","messageId":"122","endLine":7,"endColumn":23},{"ruleId":"119","severity":1,"message":"124","line":4,"column":16,"nodeType":"121","messageId":"122","endLine":4,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":30,"column":17,"nodeType":"127","messageId":"128","endLine":30,"endColumn":19},{"ruleId":"119","severity":1,"message":"129","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":19},{"ruleId":"119","severity":1,"message":"130","line":2,"column":21,"nodeType":"121","messageId":"122","endLine":2,"endColumn":27},{"ruleId":"119","severity":1,"message":"131","line":14,"column":10,"nodeType":"121","messageId":"122","endLine":14,"endColumn":17},{"ruleId":"119","severity":1,"message":"132","line":48,"column":9,"nodeType":"121","messageId":"122","endLine":48,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":6,"column":13,"nodeType":"135","endLine":6,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":19},{"ruleId":"119","severity":1,"message":"136","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":17},{"ruleId":"119","severity":1,"message":"137","line":3,"column":9,"nodeType":"121","messageId":"122","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":19,"column":7,"nodeType":"140","endLine":19,"endColumn":9,"suggestions":"141"},{"ruleId":"119","severity":1,"message":"137","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":13},{"ruleId":"119","severity":1,"message":"142","line":8,"column":10,"nodeType":"121","messageId":"122","endLine":8,"endColumn":17},{"ruleId":"119","severity":1,"message":"143","line":8,"column":19,"nodeType":"121","messageId":"122","endLine":8,"endColumn":29},{"ruleId":"119","severity":1,"message":"131","line":10,"column":10,"nodeType":"121","messageId":"122","endLine":10,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":16,"column":15,"nodeType":"127","messageId":"128","endLine":16,"endColumn":17},{"ruleId":"119","severity":1,"message":"132","line":34,"column":9,"nodeType":"121","messageId":"122","endLine":34,"endColumn":22},{"ruleId":"119","severity":1,"message":"144","line":17,"column":11,"nodeType":"121","messageId":"122","endLine":17,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":18,"column":15,"nodeType":"127","messageId":"128","endLine":18,"endColumn":17},{"ruleId":"119","severity":1,"message":"145","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"119","severity":1,"message":"146","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":16},{"ruleId":"119","severity":1,"message":"147","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},{"ruleId":"119","severity":1,"message":"137","line":6,"column":9,"nodeType":"121","messageId":"122","endLine":6,"endColumn":13},{"ruleId":"119","severity":1,"message":"145","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":20,"column":25,"nodeType":"135","endLine":20,"endColumn":40},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'useHistory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Button' is defined but never used.","'dislike' is assigned a value but never used.","'handleDislike' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Questions' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.id' and 'questionId'. Either include them or remove the dependency array.","ArrayExpression",["152"],"'isLiked' is assigned a value but never used.","'updateLike' is assigned a value but never used.","'login' is assigned a value but never used.","'ErrorNotice' is defined but never used.","'Register' is defined but never used.","'Login' is defined but never used.","react/jsx-pascal-case","Imported JSX component Post_question must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [match.params.id, questionId]",{"range":"155","text":"156"},[758,760],"[match.params.id, questionId]"]