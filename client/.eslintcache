[{"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js":"1","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js":"2","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js":"3","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js":"4","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js":"5","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js":"6","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js":"7","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js":"8","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js":"9","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js":"10","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js":"11","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js":"12","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js":"13","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js":"14","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js":"15","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js":"16","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js":"17","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\editor\\QuillEditor.js":"18","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\pagination.js":"19","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js":"20","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\QuestionContext.js":"21"},{"size":189,"mtime":1610023430474,"results":"22","hashOfConfig":"23"},{"size":2774,"mtime":1610029280775,"results":"24","hashOfConfig":"23"},{"size":75,"mtime":1608589240348,"results":"25","hashOfConfig":"23"},{"size":971,"mtime":1609279231229,"results":"26","hashOfConfig":"23"},{"size":2663,"mtime":1610027900039,"results":"27","hashOfConfig":"23"},{"size":5175,"mtime":1609195455428,"results":"28","hashOfConfig":"23"},{"size":3988,"mtime":1610018224662,"results":"29","hashOfConfig":"23"},{"size":1578,"mtime":1609881886125,"results":"30","hashOfConfig":"23"},{"size":2784,"mtime":1609952897964,"results":"31","hashOfConfig":"23"},{"size":3588,"mtime":1610024667871,"results":"32","hashOfConfig":"23"},{"size":249,"mtime":1609711428038,"results":"33","hashOfConfig":"23"},{"size":2425,"mtime":1609715892501,"results":"34","hashOfConfig":"23"},{"size":478,"mtime":1609282064095,"results":"35","hashOfConfig":"23"},{"size":539,"mtime":1608983842355,"results":"36","hashOfConfig":"23"},{"size":2361,"mtime":1609949542900,"results":"37","hashOfConfig":"23"},{"size":1269,"mtime":1609959379682,"results":"38","hashOfConfig":"23"},{"size":3341,"mtime":1609952897963,"results":"39","hashOfConfig":"23"},{"size":15020,"mtime":1609874836218,"results":"40","hashOfConfig":"23"},{"size":670,"mtime":1609949088257,"results":"41","hashOfConfig":"23"},{"size":4165,"mtime":1609876739821,"results":"42","hashOfConfig":"23"},{"size":75,"mtime":1610019077986,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lll919",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js",["99"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js",[],["100","101"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js",["102","103","104","105","106"],"import React from 'react';\r\nimport {Fragment} from 'react';\r\nimport Register from '../auth/reg' ;\r\nimport Login from '../auth/login';\r\nimport Footer from './Footer';\r\nimport {Link} from \"react-router-dom\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\"\r\nimport Post_question from \"../pages/post_question\"\r\nexport default function home() {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg logan\">\r\n                        <h1 className=\"label\">Bienvenue au EnsiasOverflow</h1>\r\n                        <p>Votre propre monde professionel</p>\r\n                    </div>\r\n                    <div className=\"col-lg\">\r\n                        {/* <Login/> */}\r\n                        <Post_question></Post_question>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            <Footer/>\r\n\r\n\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js",["107","108","109","110","111","112"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js",["113"],"import React, { useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { Fragment } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nfunction Register() {\r\n  /** Tracking the states of the form */\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [fname, setFirstName] = useState();\r\n  const [lname, setLastName] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const [success, setSuccess] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const { setUserData } = useContext(UserContext);\r\n  // const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = {\r\n        username,\r\n        fname,\r\n        lname,\r\n        email,\r\n        password,\r\n        passwordCheck,\r\n      };\r\n      await Axios.post(\"http://localhost:5000/api/user/register\", newUser);\r\n\r\n      const loginRes = await Axios.post(\r\n        \"http://localhost:5000/api/user/login\",\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.id,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      //  console.log(loginRes.data.user.id);\r\n      if (loginRes.data.token) {\r\n        setSuccess(\"Account created successfully. Welcome aboard !\");\r\n      }\r\n      // history.push(\"/\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n    // window.location.reload(false);\r\n    // console.log(loginRes);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <section>\r\n          <h1 className=\"label text-primary\">Sign Up</h1>\r\n          {success && (\r\n            <SuccessNotice\r\n              message={success}\r\n              clearError={() => setSuccess(undefined)}\r\n            />\r\n          )}\r\n      \r\n          {error && (\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n            />\r\n          )}\r\n\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i> Sign Into Your Account\r\n          </p>\r\n          <form onSubmit={submit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputusername\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-username\"\r\n                placeholder=\"Username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputLastName\">Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-lastname\"\r\n                placeholder=\"Doe\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputFirstName\">First name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-firstname\"\r\n                placeholder=\"Jane\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputemail\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"reg-email\"\r\n                placeholder=\"email@gmail.com\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password\"\r\n                placeholder=\"******\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password-vf\"\r\n                placeholder=\"Verify Password\"\r\n                onChange={(e) => setPasswordCheck(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" value=\"Register\" className=\"btn btn-primary\">\r\n              Register\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?\r\n            <Link to=\"/login\"> Sign in</Link>\r\n          </p>\r\n        </section>\r\n      </div>\r\n      <Footer></Footer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js",["114","115"],"import React, { useState, useContext, Fragment } from \"react\";\r\n\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\n// import List from '@editorjs/list';\r\nimport QuillEditor from \"./editor/QuillEditor\";\r\nimport {message} from \"antd\"; \r\n\r\nexport default function Post_question() {\r\n\r\n  \r\n  const userData = useContext(UserContext)\r\n\r\n  const onEditorChange = (value) =>\r\n  {\r\n    setContent(value);\r\n  } \r\n  const onFilesChange = (files) => {\r\n    setFiles(files)\r\n}\r\n  /** Successfully accessed userData */\r\n  // console.log(userData.userData.token);\r\n  const [files, setFiles] = useState([])\r\n  const [qst_title, setTitle] = useState();\r\n  const [qst_content, setContent] = useState();\r\n\r\n  \r\n  /** Error posting the question */\r\n  const [error, setError] = useState();\r\n\r\n  /** Successfully posted question */\r\n  const [success, setSuccess] = useState();\r\n\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = userData.userData.token;\r\n      if (token == undefined) {\r\n        message.error('You must be logged in to post a question.');\r\n\r\n        setTimeout(() => {\r\n           \r\n        }, 2500);\r\n      }\r\n\r\n      const newQuestion = {\r\n        qst_title,\r\n        qst_content,\r\n      };\r\n\r\n      const postres = await Axios.post(\"/posts/ask\", newQuestion, {\r\n        headers: { \"auth-token\": userData.userData.token },\r\n      });\r\n\r\n      if (postres) {\r\n        // setSuccess(\"Question posted successfully !\");\r\n        message.success('Post Created!');\r\n\r\n                    setTimeout(() => {\r\n                       \r\n                    }, 2500);\r\n      }\r\n    } catch (err) {\r\n      err.response.data.msg && message.warning(err.response.data.msg); \r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={submit}>\r\n            <h1 className=\"label text-primary\"> Got a question ?</h1>\r\n\r\n            {success && (\r\n              <SuccessNotice\r\n                message={success}\r\n                clearError={() => setSuccess(undefined)}\r\n              />\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              {error && (\r\n                <ErrorNotice\r\n                  message={error}\r\n                  clearError={() => setError(undefined)}\r\n                />\r\n                \r\n              )}\r\n              <label for=\"qst_title\">Question title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"qst_title\"\r\n                aria-describedby=\"Put your question title here\"\r\n                placeholder=\"Put your question title here\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n              <small id=\"qst_help\" className=\"form-text text-muted\">\r\n                Keep it simple !\r\n              </small>\r\n            </div>\r\n           <div className=\"form-group\">\r\n              <label for=\"\">Content</label>\r\n\r\n              <div id=\"ql-editor\">\r\n              <QuillEditor \r\n              className=\"ql-editor\"\r\n                placeholder=\"Start Posting Something\"\r\n                onEditorChange={onEditorChange}\r\n                onFilesChange={onFilesChange}\r\n                // onFilesChange={onFilesChange}\r\n             />\r\n                </div>\r\n              {/* <textarea\r\n                type=\"text\"\r\n                className=\"form-control full-width\"\r\n                id=\"qst_content\"\r\n                placeholder=\"Content of the question\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              /> */}\r\n              \r\n            </div> \r\n           \r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Post\r\n            </button>\r\n\r\n               \r\n            \r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js",["116"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport QuestionItem from \"../Question/QuestionItem\";\nimport ResponseForm from \"./ResponseForm\";\nimport ResponseItem from \"./ResponseItem\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Question = ({ match }) => {\n  const [question, setQuestion] = useState({});\n//   const [author, setAuthor] = useState({});\n  const [responses, setResponses] = useState([]);\n  const questionId = match.params.id;\n \n  useEffect(() => {\n    axios\n      .get(\"/posts/\" + questionId)\n      .then((res) => {\n        setQuestion(res.data);\n        // console.log(question);\n      })\n      .catch((err) => console.log(err));\n    axios\n      .get(\"/posts/reponses/\" + match.params.id)\n      .then((res) => setResponses(res.data))\n      .catch();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <Link to=\"/posts/all\">\n          <i className=\"fa fa-arrow-left\"></i>Back to questions\n        </Link>\n       \n        <QuestionItem question={questionId} />\n        <div>\n          <div className=\"border m-2\"></div>\n          <p className=\"\">{responses.length} answers</p>\n\n          {responses.map((response) => (\n            <ResponseItem\n              key={response._id}\n              questionId={questionId}\n              response={response}\n            />\n          ))}\n        </div>\n        <div className=\"border m-2\"></div>\n        <ResponseForm id={question._id} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Question;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js",["117","118","119","120","121","122","123","124","125","126","127","128"],"import React, { Fragment, useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport QuestionItem from \"../pages/QuestionItem\";\r\nimport Pagination from \"./pagination\";\r\nimport QuestionContext from \"../../context/QuestionContext\";\r\n\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { message } from \"antd\";\r\nconst inputstyle = {\r\n  marginTop: \"40px\",\r\n  width: \"70vw\",\r\n  height: \"40px\",\r\n  fontSize: \"20px\",\r\n  paddingLeft: \"10px\",\r\n  margin: \"autp\",\r\n};\r\nconst Questions = () => {\r\n  const [qsts, setQsts] = useState([]);\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const [visible, setVisible] = useState(3);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(5);\r\n\r\n  const key = qsts;\r\n\r\n  useEffect(() => {\r\n    message.loading({ content: \"Loading...\", key });\r\n    axios\r\n      .get(\"/posts/all\")\r\n      .then((res) => {\r\n        setQsts(res.data);\r\n        setTimeout(() => {\r\n          message.success({ content: \"Loaded!\", key, duration: 1 });\r\n        }, 700);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const loadmore = () => {\r\n    setVisible(qsts.length);\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = qsts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        {/* <div>\r\n          <input className=\"form-control\"\r\n          id=\"SearchBar\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            style={inputstyle}\r\n            onChange={(Event) => setSearchItem(Event.target.value)}\r\n          />\r\n          <span class=\"glyphicon glyphicon-search form-control-feedback\"> </span>\r\n        </div> */}\r\n\r\n      <br/>\r\n        <div class=\"input-group md-form form-sm form-2 pl-0 head\">\r\n        <input\r\n          class=\"form-control my-0 py-1 red-border\"\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          placeholder=\"Search...\"\r\n            onChange={(Event) => setSearchItem(Event.target.value)}\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <span class=\"input-group-text red lighten-3\" id=\"basic-text1\">\r\n            <i aria-hidden=\"true\">\r\n            <FontAwesomeIcon icon={faSearch} />\r\n\r\n            </i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n<br/>\r\n        \r\n\r\n        <h1 className=\"display-4 title md\">Questions </h1>\r\n        {qsts\r\n          .filter((qst) => {\r\n            if (searchItem === \"\") {\r\n              return qst;\r\n            } else if (\r\n              qst.qst_title.toLowerCase().includes(searchItem.toLowerCase())\r\n            ) {\r\n              return qst;\r\n            }\r\n          })\r\n          .slice(indexOfFirstPost, indexOfLastPost)\r\n          .map((qst) => (\r\n            <QuestionItem key={qst._id} qst={qst} />\r\n          ))}\r\n\r\n        {searchItem === \"\" && (\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={qsts.length}\r\n            paginate={paginate}\r\n          />\r\n        )}\r\n\r\n        {/* <div>\r\n          {visible < qsts.length &&\r\n            <button className='btn btn-success' onClick={loadmore}>See more</button>}\r\n        </div> */}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Questions;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js",["129"],"import React from 'react'\n\nfunction Footer() {\n    return (\n        <div className=\"footer-copyright text-center py-3 bg-light\" id=\"footer\">\n        © 2020 Copyright:\n            <a> EnsiasOverflow</a>\n        </div>\n    )\n}\n\nexport default Footer\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js",["130","131","132"],"import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\nimport QuillEditor from \"../pages/editor/QuillEditor\";\nimport {message} from \"antd\"; \n\n\nconst ResponseForm = ({ id }) => {\n  const [rep_content, setContent] = useState(\"\");\n  const [error, setError] = useState();\n  const [files, setFiles] = useState();\n\n\n  // console.log(checkLogin());\n  const onEditorChange = (value) =>\n  {\n    setContent(value);\n  } \n  const onFilesChange = (files) => {\n    setFiles(files)\n}\n\n  const submit = (e) => {\n    const token = localStorage.getItem(\"auth-token\");\n    const login = true;\n    if (token == \"\") {\n      message.error('You must be logged in to perform this action.');\n\n      setTimeout(() => {\n         \n      }, 2500);\n    }\n\n    const newResponse = {\n      rep_content,\n    };\n    // console.log(id);\n    axios\n      .post(\"/posts/respond/\" + id, newResponse, {\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\n      })\n      .then((res) => console.log(res.data))\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <form onSubmit={submit}>\n          <h4 className=\"label text-primary\"> Your answer! </h4>\n          {error && (\n            <>\n              <ErrorNotice\n                message={error}\n                clearError={() => setError(undefined)}\n                link=\"Sign in here\"\n              />\n            </>\n          )}\n          {/* <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control full-width\"\n              id=\"rep_content\"\n              placeholder=\"Content of the response\"\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div> */}\n          <div id=\"ql-editor\">\n                  <QuillEditor \n                  className=\"ql-editor\"\n                    placeholder=\"Start Posting Something\"\n                    onEditorChange={onEditorChange}\n                    onFilesChange={onFilesChange}\n                    // onFilesChange={onFilesChange}\n\n                  />\n                </div>\n                \n          <button type=\"submit\" className=\"btn btn-primary\">\n            Post your answer\n          </button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ResponseForm;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js",["133"],"import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function SuccessNotice(props) {\r\n    return (\r\n        <div>\r\n            <Alert variant='success' id='succ_message'>\r\n            <span> {props.message} \r\n            {/* <Link id='link_signin' to=\"/login\"> <br/> Sign in Now</Link> */}\r\n            </span>\r\n            \r\n            {/* <button onClick={props.clearError}>X</button>          */}\r\n            \r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js",["134","135"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\nimport \"./style.css\";\nimport axios from \"axios\";\n\nfunction QuestionItem({ question }) {\n  // console.log(question.user.username);\n\n  const [questionAsked, setQuestionAsked] = useState({});\n  const [author, setAuthor] = useState({question});\n\n  //   const [author, setAuthor] = useState({});\n  // const [responses, setResponses] = useState([]);\n  // const questionId = match.params.id;\n  useEffect(() => {\n    axios\n      .get(\"/posts/\" + question)\n      .then(JSON => {\n        setQuestionAsked(JSON.data);\n        setAuthor(JSON.data)\n        console.log(author);\n        // console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <Fragment>\n      <h3 className=\"\">{questionAsked.qst_title}</h3>\n      <Card style={{ width: \"70vw\", borderColor: \"black\" }}>\n        <Card.Body>\n          <Card.Subtitle\n            className=\"mb-2 text-muted\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            Author: \n              <Card.Link href=\"#LinktoUser\">\n              {}\n\n               </Card.Link>\n            </div>\n            <div\n              className=\"mb-1 text-muted\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              On : {questionAsked.asked_date}\n            </div>\n          </Card.Subtitle>\n          <Card.Text>\n            <div\n              dangerouslySetInnerHTML={{ __html: questionAsked.qst_content }}\n            ></div>\n          </Card.Text>\n          <div className=\"ml-auto\">\n            {/* <span type=\"button\" className=\"btn btn-success mr-2\"  >\n                <i className=\"fa fa-thumbs-up\"></i> {' '}\n                {question.qst_likes.length >0 && <span>{question.qst_likes.length}</span>} \n              </span> */}\n            {/* <span type=\"button\" className=\"btn btn-success\">\n                <i className=\"fa fa-thumbs-down\"></i> {' '}\n                {question.qst_dislikes.length >0 && <span>{question.qst_dislikes.length}</span>} \n              </span> */}\n          </div>\n        </Card.Body>\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default QuestionItem;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js",["136","137","138","139"],"import React, { Fragment, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\n\r\nimport {message} from \"antd\"; \r\n\r\n\r\nconst ResponseItem = ({ response, questionId }) => {\r\n \r\n  const [like, setlikes] = useState([response.rep_likes.length]);\r\n  const [dislike, setdislikes] = useState([response.rep_dislikes.length]);\r\n  const [error, setError] = useState();\r\n  // const { setUserData } = useContext(UserContext);\r\n  const handleLike = (res_id) => {\r\n    const id = res_id;\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    if (token == \"\") {\r\n      message.error('You must be logged in to perform this action.');\r\n\r\n      setTimeout(() => {\r\n         \r\n      }, 2500);\r\n    }\r\n    axios\r\n      .put(\"/posts/like/\" + questionId + \"/responses/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.rep_likes.length);\r\n        setlikes(res.data.rep_likes.length);\r\n        setdislikes(res.data.rep_dislikes.length);\r\n      })\r\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\r\n  };\r\n\r\n  const handleDislike = (res_id) => {\r\n    const id = res_id;\r\n    axios\r\n      .put(\"/posts/unlike/\" + questionId + \"/responses/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setlikes(res.data.rep_likes.length);\r\n        setdislikes(res.data.rep_dislikes.length);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: \"70vw\", margin: \"5px\", borderColor: \"black\" }}>\r\n        <Card.Body>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Answered by :\r\n            <Card.Link href=\"#LinktoUser\"> {response.username} </Card.Link>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted\">\r\n            {\" \"}\r\n            On : {response.rep_date.substring(0, 10)}{\" \"}\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: response.rep_content }}\r\n            ></div>\r\n          </Card.Text>\r\n          <div className=\"ml-auto\">\r\n            {/* {error && (<>\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n              link =\"Sign in here\"\r\n            />\r\n          </>\r\n           \r\n          )} */}\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-2\"\r\n              value={response._id}\r\n              onClick={() => {\r\n                handleLike(response._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-up\"></i> <span>{like}</span>\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                handleDislike(response._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-down\"></i>\r\n              {\" \"}\r\n               {<span>{dislike}</span>}\r\n            </button> */}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\editor\\QuillEditor.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\pagination.js",["140"],"import React from 'react'\r\n\r\n\r\nconst pagination = ({postsPerPage,totalPosts, paginate}) => {\r\n    const pageNumber= []\r\n\r\n    for(let i=1;i<=Math.ceil(totalPosts/postsPerPage);i++){\r\n        pageNumber.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {\r\n                    pageNumber.map(number=> (\r\n                        <li  key={number} className='page-item'>\r\n                            <a  onClick={()=> paginate(number)} className='page-link'>{number}</a>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default pagination\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js",["141","142","143","144"],"import React, { Fragment, useState, useContext } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport {message} from \"antd\"; \r\n\r\nfunction QuestionItem({ qst }) {\r\n  /**\r\n   * Here we Initialize the states with the Number values :\r\n   *  Like & dislike which we call in the render method\r\n   */\r\n  const [like, setlikes] = useState([qst.qst_likes.length]);\r\n  const [dislike, setdislikes] = useState([qst.qst_dislikes.length]);\r\n  const userData = useContext(UserContext)\r\n  //   useEffect(() => {\r\n  //     axios.get('h')\r\n  //     .then(res => {setQsts(res.data) })\r\n  //     .catch(err => console.log(err))\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/posts/like\")\r\n  //     .then((res) => {\r\n  //       setQsts(res.data);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n\r\n  const handleLike = (id) => {\r\n    // const id = _id;\r\n    const token = userData.userData.token;\r\n    if (token == undefined) {\r\n      message.error('You must be logged in to perform this action.');\r\n\r\n      setTimeout(() => {\r\n         \r\n      }, 2500);\r\n    }\r\n\r\n    axios\r\n      .put(\"/posts/like/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((result) => {\r\n        // console.log(result.data.qst_likes.length);\r\n        setlikes(result.data.qst_likes.length);\r\n        setdislikes(result.data.qst_dislikes.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const handleDislike = (id) => {\r\n  //   axios\r\n  //     .put(\"/posts/unlike/\" + id, null, {\r\n  //       headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n  //     })\r\n  //     .then((result) => {\r\n  //       /**\r\n  //        * Here the result displays the dislikes.lenght\r\n  //        */\r\n  //       // console.log(result.data.qst_likes.length);\r\n  //       setlikes(result.data.qst_likes.length);\r\n  //       setdislikes(result.data.qst_dislikes.length);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: \"70vw\" ,borderColor:'black', margin:'5px'}}>\r\n        <Card.Body>\r\n          <Card.Title>{qst.qst_title}</Card.Title>\r\n          \r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Asked by :<Card.Link href=\"#LinktoUser\"> {qst.user.username} </Card.Link>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted\">\r\n            {\" \"}\r\n            On : {qst.asked_date.substring(0, 10)}{\" \"}\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n          <div dangerouslySetInnerHTML={{__html: qst.qst_content }}>\r\n          \r\n          </div>\r\n         \r\n          \r\n          </Card.Text>\r\n          <div className=\"ml-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-2\"\r\n              onClick={() => {\r\n                handleLike(qst._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-up\"></i>\r\n\r\n              <span> {like} </span>\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                handleDislike(qst._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-down\"></i>{\" \"}\r\n              {qst.qst_dislikes.length > 0 && <span> {dislike}</span>}\r\n            </button> */}\r\n            <Link to={`/posts/${qst._id}`} \r\n            className=\"btn btn-outline-success margin\"\r\n           >\r\n              View answers{\" \"}\r\n              {qst.responses.length > 0 && (\r\n                <span className=\"comment-count\">{qst.responses.length}</span>\r\n              )}\r\n            </Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <>\r\n      <br></br>\r\n      </>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuestionItem;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\QuestionContext.js",[],{"ruleId":"145","severity":1,"message":"146","line":21,"column":9,"nodeType":"147","messageId":"148","endLine":21,"endColumn":20},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"145","severity":1,"message":"153","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":16},{"ruleId":"145","severity":1,"message":"154","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":13},{"ruleId":"145","severity":1,"message":"155","line":6,"column":9,"nodeType":"147","messageId":"148","endLine":6,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":20,"column":25,"nodeType":"159","endLine":20,"endColumn":40},{"ruleId":"145","severity":1,"message":"160","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"161","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":20},{"ruleId":"145","severity":1,"message":"162","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":13},{"ruleId":"145","severity":1,"message":"163","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":20},{"ruleId":"145","severity":1,"message":"164","line":32,"column":9,"nodeType":"147","messageId":"148","endLine":32,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":39,"column":9,"nodeType":"159","endLine":39,"endColumn":50},{"ruleId":"145","severity":1,"message":"167","line":4,"column":16,"nodeType":"147","messageId":"148","endLine":4,"endColumn":26},{"ruleId":"145","severity":1,"message":"168","line":25,"column":10,"nodeType":"147","messageId":"148","endLine":25,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":41,"column":17,"nodeType":"171","messageId":"172","endLine":41,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":27,"column":6,"nodeType":"175","endLine":27,"endColumn":8,"suggestions":"176"},{"ruleId":"145","severity":1,"message":"177","line":1,"column":48,"nodeType":"147","messageId":"148","endLine":1,"endColumn":58},{"ruleId":"145","severity":1,"message":"178","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":23},{"ruleId":"145","severity":1,"message":"179","line":11,"column":7,"nodeType":"147","messageId":"148","endLine":11,"endColumn":17},{"ruleId":"145","severity":1,"message":"180","line":22,"column":10,"nodeType":"147","messageId":"148","endLine":22,"endColumn":14},{"ruleId":"145","severity":1,"message":"181","line":22,"column":16,"nodeType":"147","messageId":"148","endLine":22,"endColumn":23},{"ruleId":"145","severity":1,"message":"182","line":23,"column":10,"nodeType":"147","messageId":"148","endLine":23,"endColumn":17},{"ruleId":"145","severity":1,"message":"183","line":25,"column":24,"nodeType":"147","messageId":"148","endLine":25,"endColumn":39},{"ruleId":"173","severity":1,"message":"184","line":40,"column":6,"nodeType":"175","endLine":40,"endColumn":8,"suggestions":"185"},{"ruleId":"145","severity":1,"message":"186","line":42,"column":9,"nodeType":"147","messageId":"148","endLine":42,"endColumn":17},{"ruleId":"145","severity":1,"message":"187","line":48,"column":9,"nodeType":"147","messageId":"148","endLine":48,"endColumn":21},{"ruleId":"188","severity":1,"message":"189","line":77,"column":11,"nodeType":"190","endLine":77,"endColumn":34},{"ruleId":"191","severity":1,"message":"192","line":95,"column":25,"nodeType":"193","messageId":"194","endLine":95,"endColumn":27},{"ruleId":"195","severity":1,"message":"196","line":7,"column":13,"nodeType":"159","endLine":7,"endColumn":16},{"ruleId":"145","severity":1,"message":"168","line":11,"column":10,"nodeType":"147","messageId":"148","endLine":11,"endColumn":15},{"ruleId":"145","severity":1,"message":"197","line":25,"column":11,"nodeType":"147","messageId":"148","endLine":25,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":26,"column":15,"nodeType":"171","messageId":"172","endLine":26,"endColumn":17},{"ruleId":"145","severity":1,"message":"155","line":3,"column":9,"nodeType":"147","messageId":"148","endLine":3,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":19},{"ruleId":"173","severity":1,"message":"198","line":26,"column":6,"nodeType":"175","endLine":26,"endColumn":8,"suggestions":"199"},{"ruleId":"145","severity":1,"message":"200","line":11,"column":10,"nodeType":"147","messageId":"148","endLine":11,"endColumn":17},{"ruleId":"145","severity":1,"message":"201","line":12,"column":10,"nodeType":"147","messageId":"148","endLine":12,"endColumn":15},{"ruleId":"169","severity":1,"message":"170","line":17,"column":15,"nodeType":"171","messageId":"172","endLine":17,"endColumn":17},{"ruleId":"145","severity":1,"message":"202","line":36,"column":9,"nodeType":"147","messageId":"148","endLine":36,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":16,"column":29,"nodeType":"159","endLine":16,"endColumn":87},{"ruleId":"145","severity":1,"message":"203","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":19},{"ruleId":"145","severity":1,"message":"204","line":2,"column":21,"nodeType":"147","messageId":"148","endLine":2,"endColumn":27},{"ruleId":"145","severity":1,"message":"200","line":16,"column":10,"nodeType":"147","messageId":"148","endLine":16,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":37,"column":15,"nodeType":"171","messageId":"172","endLine":37,"endColumn":17},"no-unused-vars","'getQuestion' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["205"],"no-negated-in-lhs",["206"],"'Register' is defined but never used.","'Login' is defined but never used.","'Link' is defined but never used.","'ErrorNotice' is defined but never used.","react/jsx-pascal-case","Imported JSX component Post_question must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'useEffect' is defined but never used.","'QuestionItem' is defined but never used.","'Axios' is defined but never used.","'searchItem' is assigned a value but never used.","'qsts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useHistory' is defined but never used.","'files' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.id' and 'questionId'. Either include them or remove the dependency array.","ArrayExpression",["207"],"'useContext' is defined but never used.","'QuestionContext' is defined but never used.","'inputstyle' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'visible' is assigned a value but never used.","'setPostsPerPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["208"],"'loadmore' is assigned a value but never used.","'currentPosts' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'login' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'author' and 'question'. Either include them or remove the dependency array.",["209"],"'dislike' is assigned a value but never used.","'error' is assigned a value but never used.","'handleDislike' is assigned a value but never used.","'Container' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [match.params.id, questionId]",{"range":"216","text":"217"},"Update the dependencies array to be: [key]",{"range":"218","text":"219"},"Update the dependencies array to be: [author, question]",{"range":"220","text":"221"},[865,867],"[match.params.id, questionId]",[1252,1254],"[key]",[804,806],"[author, question]"]