[{"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js":"1","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js":"2","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js":"3","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js":"4","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js":"5","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js":"6","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js":"7","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js":"8","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js":"9","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js":"10","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js":"11","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js":"12","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js":"13","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js":"14","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js":"15","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js":"16","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js":"17","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js":"18","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\editor\\QuillEditor.js":"19"},{"size":189,"mtime":1609419518846,"results":"20","hashOfConfig":"21"},{"size":2616,"mtime":1609669766550,"results":"22","hashOfConfig":"21"},{"size":939,"mtime":1609713636747,"results":"23","hashOfConfig":"21"},{"size":402,"mtime":1609369232614,"results":"24","hashOfConfig":"21"},{"size":5175,"mtime":1609195455428,"results":"25","hashOfConfig":"21"},{"size":75,"mtime":1608589240348,"results":"26","hashOfConfig":"21"},{"size":2830,"mtime":1609873662033,"results":"27","hashOfConfig":"21"},{"size":4046,"mtime":1609717061865,"results":"28","hashOfConfig":"21"},{"size":4165,"mtime":1609876739821,"results":"29","hashOfConfig":"21"},{"size":249,"mtime":1609711428038,"results":"30","hashOfConfig":"21"},{"size":1371,"mtime":1609678732421,"results":"31","hashOfConfig":"21"},{"size":539,"mtime":1608983842355,"results":"32","hashOfConfig":"21"},{"size":478,"mtime":1609282064095,"results":"33","hashOfConfig":"21"},{"size":1578,"mtime":1609881886125,"results":"34","hashOfConfig":"21"},{"size":3369,"mtime":1609715861453,"results":"35","hashOfConfig":"21"},{"size":2425,"mtime":1609715892501,"results":"36","hashOfConfig":"21"},{"size":2361,"mtime":1609882117558,"results":"37","hashOfConfig":"21"},{"size":971,"mtime":1609279231229,"results":"38","hashOfConfig":"21"},{"size":15020,"mtime":1609874836218,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"lll919",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"42"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\index.js",[],["94","95"],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\App.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\questions.js",["96","97","98"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport QuestionItem from \"../pages/QuestionItem\";\r\nimport {message} from \"antd\"; \r\nconst Questions = () => {\r\n  const [qsts, setQsts] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  \r\n  const key = qsts;\r\n  useEffect(() => {\r\n    message.loading({ content: \"Loading...\", key });\r\n    axios\r\n      .get(\"/posts/all\")\r\n      .then((res) => {\r\n        setQsts(res.data);\r\n        setTimeout(() => {\r\n          message.success({ content: \"Loaded!\", key, duration: 1 });\r\n        }, 700);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <h1 className=\"label text-primary\">Questions </h1>\r\n        {qsts.map((qst) => (\r\n          <QuestionItem key={qst._id} qst={qst} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Questions;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\header.js",["99"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthOptions from '../auth/options';\r\nimport img from '../../components/images/1.png'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header id=\"header\">\r\n      <Link className=\"title\" to=\"/\">\r\n        <img src={img} width=\"150\" height=\"50\"/>\r\n      </Link>\r\n      <AuthOptions></AuthOptions>\r\n    </header>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\reg.js",["100"],"import React, { useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { Fragment } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nfunction Register() {\r\n  /** Tracking the states of the form */\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [fname, setFirstName] = useState();\r\n  const [lname, setLastName] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const [success, setSuccess] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const { setUserData } = useContext(UserContext);\r\n  // const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = {\r\n        username,\r\n        fname,\r\n        lname,\r\n        email,\r\n        password,\r\n        passwordCheck,\r\n      };\r\n      await Axios.post(\"http://localhost:5000/api/user/register\", newUser);\r\n\r\n      const loginRes = await Axios.post(\r\n        \"http://localhost:5000/api/user/login\",\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.id,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      //  console.log(loginRes.data.user.id);\r\n      if (loginRes.data.token) {\r\n        setSuccess(\"Account created successfully. Welcome aboard !\");\r\n      }\r\n      // history.push(\"/\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n    // window.location.reload(false);\r\n    // console.log(loginRes);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <section>\r\n          <h1 className=\"label text-primary\">Sign Up</h1>\r\n          {success && (\r\n            <SuccessNotice\r\n              message={success}\r\n              clearError={() => setSuccess(undefined)}\r\n            />\r\n          )}\r\n      \r\n          {error && (\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n            />\r\n          )}\r\n\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i> Sign Into Your Account\r\n          </p>\r\n          <form onSubmit={submit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputusername\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-username\"\r\n                placeholder=\"Username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputLastName\">Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-lastname\"\r\n                placeholder=\"Doe\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputFirstName\">First name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-firstname\"\r\n                placeholder=\"Jane\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputemail\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"reg-email\"\r\n                placeholder=\"email@gmail.com\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password\"\r\n                placeholder=\"******\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password-vf\"\r\n                placeholder=\"Verify Password\"\r\n                onChange={(e) => setPasswordCheck(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" value=\"Register\" className=\"btn btn-primary\">\r\n              Register\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?\r\n            <Link to=\"/login\"> Sign in</Link>\r\n          </p>\r\n        </section>\r\n      </div>\r\n      <Footer></Footer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\context\\UserContext.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\login.js",["101"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { message } from \"antd\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const { setUserData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submitted\");\r\n    try {\r\n      const loginUser = { email, password };\r\n      //* Here we call an instance of the server route that will proceed the request of type post\r\n      //*using */\r\n      const loginRes = await Axios.post(\"/user/login\", loginUser);\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.user.id,\r\n      });\r\n\r\n      message.success(\"Welcome back\");\r\n\r\n      setTimeout(() => {}, 2000);\r\n\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      // err.response.data.msg && setError(err.response.data.msg);\r\n\r\n      \r\n      message.error(err.response.data.msg);\r\n\r\n      setTimeout(() => {}, 2500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <section className=\"auth\">\r\n          <h1 className=\"label text-primary\">Log In</h1>\r\n\r\n          <form onSubmit={submit}>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputPassword1\"\r\n                placeholder=\"Password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Log in\r\n            </button>\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Don't have an account?\r\n            <Link to=\"/register\"> Sign Up</Link>\r\n          </p>\r\n        </section>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\post_question.js",["102","103"],"import React, { useState, useContext } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\n// import List from '@editorjs/list';\r\nimport QuillEditor from \"./editor/QuillEditor\";\r\nimport {message} from \"antd\"; \r\n\r\nexport default function Post_question() {\r\n\r\n  \r\n  const userData = useContext(UserContext)\r\n\r\n  const onEditorChange = (value) =>\r\n  {\r\n    setContent(value);\r\n  } \r\n  const onFilesChange = (files) => {\r\n    setFiles(files)\r\n}\r\n\r\n\r\n  /** Successfully accessed userData */\r\n  // console.log(userData.userData.token);\r\n  const [files, setFiles] = useState([])\r\n  const [qst_title, setTitle] = useState();\r\n  const [qst_content, setContent] = useState();\r\n\r\n  \r\n  /** Error posting the question */\r\n  const [error, setError] = useState();\r\n\r\n  /** Successfully posted question */\r\n  const [success, setSuccess] = useState();\r\n\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = userData.userData.token;\r\n      if (token == undefined) {\r\n        message.error('You must be logged in to post a question.');\r\n\r\n        setTimeout(() => {\r\n           \r\n        }, 2500);\r\n      }\r\n\r\n      const newQuestion = {\r\n        qst_title,\r\n        qst_content,\r\n      };\r\n\r\n      const postres = await Axios.post(\"/posts/ask\", newQuestion, {\r\n        headers: { \"auth-token\": userData.userData.token },\r\n      });\r\n\r\n      if (postres) {\r\n        // setSuccess(\"Question posted successfully !\");\r\n        message.success('Post Created!');\r\n\r\n                    setTimeout(() => {\r\n                       \r\n                    }, 2500);\r\n      }\r\n    } catch (err) {\r\n      err.response.data.msg && message.warning(err.response.data.msg); \r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={submit}>\r\n            <h1 className=\"label text-primary\"> Got a question ?</h1>\r\n\r\n            {success && (\r\n              <SuccessNotice\r\n                message={success}\r\n                clearError={() => setSuccess(undefined)}\r\n              />\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              {error && (\r\n                <ErrorNotice\r\n                  message={error}\r\n                  clearError={() => setError(undefined)}\r\n                />\r\n                \r\n              )}\r\n              <label for=\"qst_title\">Question title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"qst_title\"\r\n                aria-describedby=\"Put your question title here\"\r\n                placeholder=\"Put your question title here\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n              <small id=\"qst_help\" className=\"form-text text-muted\">\r\n                Keep it simple !\r\n              </small>\r\n            </div>\r\n           <div className=\"form-group\">\r\n              <label for=\"\">Content</label>\r\n\r\n              <div id=\"ql-editor\">\r\n                  <QuillEditor \r\n                  className=\"ql-editor\"\r\n                    placeholder=\"Start Posting Something\"\r\n                    onEditorChange={onEditorChange}\r\n                    onFilesChange={onFilesChange}\r\n                    // onFilesChange={onFilesChange}\r\n\r\n                  />\r\n                </div>\r\n              {/* <textarea\r\n                type=\"text\"\r\n                className=\"form-control full-width\"\r\n                id=\"qst_content\"\r\n                placeholder=\"Content of the question\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              /> */}\r\n              \r\n            </div> \r\n           \r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Post\r\n            </button>\r\n\r\n               \r\n            \r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\QuestionItem.js",["104","105","106","107"],"import React, { Fragment, useState, useContext } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport {message} from \"antd\"; \r\n\r\nfunction QuestionItem({ qst }) {\r\n  /**\r\n   * Here we Initialize the states with the Number values :\r\n   *  Like & dislike which we call in the render method\r\n   */\r\n  const [like, setlikes] = useState([qst.qst_likes.length]);\r\n  const [dislike, setdislikes] = useState([qst.qst_dislikes.length]);\r\n  const userData = useContext(UserContext)\r\n  //   useEffect(() => {\r\n  //     axios.get('h')\r\n  //     .then(res => {setQsts(res.data) })\r\n  //     .catch(err => console.log(err))\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/posts/like\")\r\n  //     .then((res) => {\r\n  //       setQsts(res.data);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n\r\n  const handleLike = (id) => {\r\n    // const id = _id;\r\n    const token = userData.userData.token;\r\n    if (token == undefined) {\r\n      message.error('You must be logged in to perform this action.');\r\n\r\n      setTimeout(() => {\r\n         \r\n      }, 2500);\r\n    }\r\n\r\n    axios\r\n      .put(\"/posts/like/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((result) => {\r\n        // console.log(result.data.qst_likes.length);\r\n        setlikes(result.data.qst_likes.length);\r\n        setdislikes(result.data.qst_dislikes.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const handleDislike = (id) => {\r\n  //   axios\r\n  //     .put(\"/posts/unlike/\" + id, null, {\r\n  //       headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n  //     })\r\n  //     .then((result) => {\r\n  //       /**\r\n  //        * Here the result displays the dislikes.lenght\r\n  //        */\r\n  //       // console.log(result.data.qst_likes.length);\r\n  //       setlikes(result.data.qst_likes.length);\r\n  //       setdislikes(result.data.qst_dislikes.length);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: \"70vw\" ,borderColor:'black', margin:'5px'}}>\r\n        <Card.Body>\r\n          <Card.Title>{qst.qst_title}</Card.Title>\r\n          \r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Asked by :<Card.Link href=\"#LinktoUser\"> {qst.user.username} </Card.Link>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted\">\r\n            {\" \"}\r\n            On : {qst.asked_date.substring(0, 10)}{\" \"}\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n          <div dangerouslySetInnerHTML={{__html: qst.qst_content }}>\r\n          \r\n          </div>\r\n         \r\n          \r\n          </Card.Text>\r\n          <div className=\"ml-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-2\"\r\n              onClick={() => {\r\n                handleLike(qst._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-up\"></i>\r\n\r\n              <span> {like} </span>\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                handleDislike(qst._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-down\"></i>{\" \"}\r\n              {qst.qst_dislikes.length > 0 && <span> {dislike}</span>}\r\n            </button> */}\r\n            <Link to={`/posts/${qst._id}`} \r\n            className=\"btn btn-outline-success margin\"\r\n           >\r\n              View answers{\" \"}\r\n              {qst.responses.length > 0 && (\r\n                <span className=\"comment-count\">{qst.responses.length}</span>\r\n              )}\r\n            </Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <>\r\n      <br></br>\r\n      </>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuestionItem;\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\Footer.js",["108"],"import React from 'react'\n\nfunction Footer() {\n    return (\n        <div className=\"footer-copyright text-center py-3 bg-light\" id=\"footer\">\n        © 2020 Copyright:\n            <a> EnsiasOverflow</a>\n        </div>\n    )\n}\n\nexport default Footer\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\auth\\options.js",["109","110"],"import React, {useContext} from \"react\";\r\nimport UserContext from \"../../context/UserContext\"; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Questions from \"../pages/questions\";\r\nexport default function Options() {\r\n\r\n    const {userData, setUserData} = useContext(UserContext);\r\n\r\n    const History = useHistory();\r\n  /**\r\n   * Interact with the history in the URL bar\r\n   */\r\n  const register = () => History.push(\"/register\");\r\n  const login = () => History.push(\"/login\");\r\n  const ask = () => History.push(\"/posts/ask\");\r\n  const Questions = () => History.push(\"/posts/all\")\r\n\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n}\r\n\r\n\r\n  return (\r\n\r\n    <nav className=\"auth-options\">\r\n \r\n      {userData.user ? (\r\n        <>      \r\n        {/* We need to add the dynamic search bar  */}\r\n        <button onClick={Questions}>Questions</button> \r\n        <button onClick={ask}>Ask a question</button> \r\n        <button onClick={logout}>Log out</button> \r\n        </>\r\n        ) : (\r\n        <>\r\n        <button onClick={Questions}>Questions</button>\r\n          <button onClick={register}>Register</button>\r\n          <button onClick={login}>Log in</button>\r\n         \r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\SuccessNotice.js",["111"],"import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function SuccessNotice(props) {\r\n    return (\r\n        <div>\r\n            <Alert variant='success' id='succ_message'>\r\n            <span> {props.message} \r\n            {/* <Link id='link_signin' to=\"/login\"> <br/> Sign in Now</Link> */}\r\n            </span>\r\n            \r\n            {/* <button onClick={props.clearError}>X</button>          */}\r\n            \r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\misc\\ErrorNotice.js",[],"D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\Question.js",["112"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport QuestionItem from \"../Question/QuestionItem\";\nimport ResponseForm from \"./ResponseForm\";\nimport ResponseItem from \"./ResponseItem\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Question = ({ match }) => {\n  const [question, setQuestion] = useState({});\n//   const [author, setAuthor] = useState({});\n  const [responses, setResponses] = useState([]);\n  const questionId = match.params.id;\n \n  useEffect(() => {\n    axios\n      .get(\"/posts/\" + questionId)\n      .then((res) => {\n        setQuestion(res.data);\n        // console.log(question);\n      })\n      .catch((err) => console.log(err));\n    axios\n      .get(\"/posts/reponses/\" + match.params.id)\n      .then((res) => setResponses(res.data))\n      .catch();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <Link to=\"/posts/all\">\n          <i className=\"fa fa-arrow-left\"></i>Back to questions\n        </Link>\n       \n        <QuestionItem question={questionId} />\n        <div>\n          <div className=\"border m-2\"></div>\n          <p className=\"\">{responses.length} answers</p>\n\n          {responses.map((response) => (\n            <ResponseItem\n              key={response._id}\n              questionId={questionId}\n              response={response}\n            />\n          ))}\n        </div>\n        <div className=\"border m-2\"></div>\n        <ResponseForm id={question._id} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Question;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseItem.js",["113","114","115","116","117","118","119","120"],"import React, { Fragment, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\nimport { Link } from \"react-router-dom\";\nimport {message} from \"antd\"; \n\n\nconst ResponseItem = ({ response, questionId }) => {\n  const [isLiked, updateLike] = useState(false);\n  const [like, setlikes] = useState([response.rep_likes.length]);\n  const [dislike, setdislikes] = useState([response.rep_dislikes.length]);\n  const [error, setError] = useState();\n  // const { setUserData } = useContext(UserContext);\n  const handleLike = (res_id) => {\n    const id = res_id;\n    const token = localStorage.getItem(\"auth-token\");\n    if (token == \"\") {\n      message.error('You must be logged in to perform this action.');\n\n      setTimeout(() => {\n         \n      }, 2500);\n    }\n    axios\n      .put(\"/posts/like/\" + questionId + \"/responses/\" + id, null, {\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\n      })\n      .then((res) => {\n        console.log(res.data.rep_likes.length);\n        setlikes(res.data.rep_likes.length);\n        setdislikes(res.data.rep_dislikes.length);\n      })\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\n  };\n\n  const handleDislike = (res_id) => {\n    const id = res_id;\n    axios\n      .put(\"/posts/unlike/\" + questionId + \"/responses/\" + id, null, {\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\n      })\n      .then((res) => {\n        // console.log(res.data);\n        setlikes(res.data.rep_likes.length);\n        setdislikes(res.data.rep_dislikes.length);\n      })\n      .catch((err) => console.log(err));\n    console.log(id);\n  };\n  return (\n    <Fragment>\n      <Card style={{ width: \"70vw\", margin: \"5px\", borderColor: \"black\" }}>\n        <Card.Body>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Answered by :\n            <Card.Link href=\"#LinktoUser\"> {response.username} </Card.Link>\n          </Card.Subtitle>\n          <Card.Subtitle className=\"mb-1 text-muted\">\n            {\" \"}\n            On : {response.rep_date.substring(0, 10)}{\" \"}\n          </Card.Subtitle>\n          <Card.Text>\n            <div\n              dangerouslySetInnerHTML={{ __html: response.rep_content }}\n            ></div>\n          </Card.Text>\n          <div className=\"ml-auto\">\n            {/* {error && (<>\n            <ErrorNotice\n              message={error}\n              clearError={() => setError(undefined)}\n              link =\"Sign in here\"\n            />\n          </>\n           \n          )} */}\n\n            <button\n              type=\"button\"\n              className=\"btn btn-success mr-2\"\n              value={response._id}\n              onClick={() => {\n                handleLike(response._id);\n              }}\n            >\n              <i className=\"fa fa-thumbs-up\"></i> <span>{like}</span>\n            </button>\n            {/* <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={() => {\n                handleDislike(response._id);\n              }}\n            >\n              <i className=\"fa fa-thumbs-down\"></i>\n              {\" \"}\n               {<span>{dislike}</span>}\n            </button> */}\n          </div>\n        </Card.Body>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default ResponseItem;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\ResponseForm.js",["121","122","123"],"import React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\nimport QuillEditor from \"../pages/editor/QuillEditor\";\nimport {message} from \"antd\"; \n\n\nconst ResponseForm = ({ id }) => {\n  const [rep_content, setContent] = useState(\"\");\n  const [error, setError] = useState();\n  const [files, setFiles] = useState();\n\n\n  // console.log(checkLogin());\n  const onEditorChange = (value) =>\n  {\n    setContent(value);\n  } \n  const onFilesChange = (files) => {\n    setFiles(files)\n}\n\n  const submit = (e) => {\n    const token = localStorage.getItem(\"auth-token\");\n    const login = true;\n    if (token == \"\") {\n      message.error('You must be logged in to perform this action.');\n\n      setTimeout(() => {\n         \n      }, 2500);\n    }\n\n    const newResponse = {\n      rep_content,\n    };\n    // console.log(id);\n    axios\n      .post(\"/posts/respond/\" + id, newResponse, {\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\n      })\n      .then((res) => console.log(res.data))\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <form onSubmit={submit}>\n          <h4 className=\"label text-primary\"> Your answer! </h4>\n          {error && (\n            <>\n              <ErrorNotice\n                message={error}\n                clearError={() => setError(undefined)}\n                link=\"Sign in here\"\n              />\n            </>\n          )}\n          {/* <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control full-width\"\n              id=\"rep_content\"\n              placeholder=\"Content of the response\"\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div> */}\n          <div id=\"ql-editor\">\n                  <QuillEditor \n                  className=\"ql-editor\"\n                    placeholder=\"Start Posting Something\"\n                    onEditorChange={onEditorChange}\n                    onFilesChange={onFilesChange}\n                    // onFilesChange={onFilesChange}\n\n                  />\n                </div>\n                \n          <button type=\"submit\" className=\"btn btn-primary\">\n            Post your answer\n          </button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ResponseForm;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\Question\\QuestionItem.js",["124","125"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\nimport \"./style.css\";\nimport axios from \"axios\";\n\nfunction QuestionItem({ question }) {\n  // console.log(question.user.username);\n\n  const [questionAsked, setQuestionAsked] = useState({});\n  const [author, setAuthor] = useState({question});\n\n  //   const [author, setAuthor] = useState({});\n  // const [responses, setResponses] = useState([]);\n  // const questionId = match.params.id;\n  useEffect(() => {\n    axios\n      .get(\"/posts/\" + question)\n      .then(JSON => {\n        setQuestionAsked(JSON.data);\n        setAuthor(JSON.data)\n        console.log(author);\n        // console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <Fragment>\n      <h3 className=\"\">{questionAsked.qst_title}</h3>\n      <Card style={{ width: \"70vw\", borderColor: \"black\" }}>\n        <Card.Body>\n          <Card.Subtitle\n            className=\"mb-2 text-muted\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n            Author: \n              <Card.Link href=\"#LinktoUser\">\n              {}\n\n               </Card.Link>\n            </div>\n            <div\n              className=\"mb-1 text-muted\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              On : {questionAsked.asked_date}\n            </div>\n          </Card.Subtitle>\n          <Card.Text>\n            <div\n              dangerouslySetInnerHTML={{ __html: questionAsked.qst_content }}\n            ></div>\n          </Card.Text>\n          <div className=\"ml-auto\">\n            {/* <span type=\"button\" className=\"btn btn-success mr-2\"  >\n                <i className=\"fa fa-thumbs-up\"></i> {' '}\n                {question.qst_likes.length >0 && <span>{question.qst_likes.length}</span>} \n              </span> */}\n            {/* <span type=\"button\" className=\"btn btn-success\">\n                <i className=\"fa fa-thumbs-down\"></i> {' '}\n                {question.qst_dislikes.length >0 && <span>{question.qst_dislikes.length}</span>} \n              </span> */}\n          </div>\n        </Card.Body>\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default QuestionItem;\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\layout\\home.js",["126","127","128","129","130"],"import React from 'react';\r\nimport {Fragment} from 'react';\r\nimport Register from '../auth/reg' ;\r\nimport Login from '../auth/login';\r\nimport Footer from './Footer';\r\nimport {Link} from \"react-router-dom\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\"\r\nimport Post_question from \"../pages/post_question\"\r\nexport default function home() {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg logan\">\r\n                        <h1 className=\"label\">Bienvenue au EnsiasOverflow</h1>\r\n                        <p>Votre propre monde professionel</p>\r\n                    </div>\r\n                    <div className=\"col-lg\">\r\n                        {/* <Login/> */}\r\n                        <Post_question></Post_question>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n            <Footer/>\r\n\r\n\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n","D:\\Desktop\\iwim.S5\\ProjetS5\\client\\src\\components\\pages\\editor\\QuillEditor.js",[],["131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":14},{"ruleId":"137","severity":1,"message":"141","line":7,"column":16,"nodeType":"139","messageId":"140","endLine":7,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":21,"column":6,"nodeType":"144","endLine":21,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":10,"column":9,"nodeType":"148","endLine":10,"endColumn":49},{"ruleId":"137","severity":1,"message":"149","line":4,"column":16,"nodeType":"139","messageId":"140","endLine":4,"endColumn":26},{"ruleId":"137","severity":1,"message":"150","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":19},{"ruleId":"137","severity":1,"message":"151","line":27,"column":10,"nodeType":"139","messageId":"140","endLine":27,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":43,"column":17,"nodeType":"154","messageId":"155","endLine":43,"endColumn":19},{"ruleId":"137","severity":1,"message":"156","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":19},{"ruleId":"137","severity":1,"message":"157","line":2,"column":21,"nodeType":"139","messageId":"140","endLine":2,"endColumn":27},{"ruleId":"137","severity":1,"message":"158","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":17},{"ruleId":"152","severity":1,"message":"153","line":37,"column":15,"nodeType":"154","messageId":"155","endLine":37,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":7,"column":13,"nodeType":"148","endLine":7,"endColumn":16},{"ruleId":"137","severity":1,"message":"156","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":19},{"ruleId":"137","severity":1,"message":"161","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":17},{"ruleId":"137","severity":1,"message":"162","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":13},{"ruleId":"142","severity":1,"message":"163","line":27,"column":6,"nodeType":"144","endLine":27,"endColumn":8,"suggestions":"164"},{"ruleId":"137","severity":1,"message":"150","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":19},{"ruleId":"137","severity":1,"message":"162","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"137","severity":1,"message":"165","line":10,"column":10,"nodeType":"139","messageId":"140","endLine":10,"endColumn":17},{"ruleId":"137","severity":1,"message":"166","line":10,"column":19,"nodeType":"139","messageId":"140","endLine":10,"endColumn":29},{"ruleId":"137","severity":1,"message":"158","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":17},{"ruleId":"137","severity":1,"message":"167","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":18,"column":15,"nodeType":"154","messageId":"155","endLine":18,"endColumn":17},{"ruleId":"137","severity":1,"message":"168","line":37,"column":9,"nodeType":"139","messageId":"140","endLine":37,"endColumn":22},{"ruleId":"137","severity":1,"message":"151","line":11,"column":10,"nodeType":"139","messageId":"140","endLine":11,"endColumn":15},{"ruleId":"137","severity":1,"message":"169","line":25,"column":11,"nodeType":"139","messageId":"140","endLine":25,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":26,"column":15,"nodeType":"154","messageId":"155","endLine":26,"endColumn":17},{"ruleId":"137","severity":1,"message":"150","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":19},{"ruleId":"142","severity":1,"message":"170","line":26,"column":6,"nodeType":"144","endLine":26,"endColumn":8,"suggestions":"171"},{"ruleId":"137","severity":1,"message":"172","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":16},{"ruleId":"137","severity":1,"message":"173","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":13},{"ruleId":"137","severity":1,"message":"162","line":6,"column":9,"nodeType":"139","messageId":"140","endLine":6,"endColumn":13},{"ruleId":"137","severity":1,"message":"150","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":20,"column":25,"nodeType":"148","endLine":20,"endColumn":40},{"ruleId":"133","replacedBy":"176"},{"ruleId":"135","replacedBy":"177"},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.","ArrayExpression",["180"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'ErrorNotice' is defined but never used.","'files' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Button' is defined but never used.","'dislike' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Questions' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'match.params.id' and 'questionId'. Either include them or remove the dependency array.",["181"],"'isLiked' is assigned a value but never used.","'updateLike' is assigned a value but never used.","'error' is assigned a value but never used.","'handleDislike' is assigned a value but never used.","'login' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'author' and 'question'. Either include them or remove the dependency array.",["182"],"'Register' is defined but never used.","'Login' is defined but never used.","react/jsx-pascal-case","Imported JSX component Post_question must be in PascalCase or SCREAMING_SNAKE_CASE",["178"],["179"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [key]",{"range":"189","text":"190"},"Update the dependencies array to be: [match.params.id, questionId]",{"range":"191","text":"192"},"Update the dependencies array to be: [author, question]",{"range":"193","text":"194"},[645,647],"[key]",[865,867],"[match.params.id, questionId]",[804,806],"[author, question]"]