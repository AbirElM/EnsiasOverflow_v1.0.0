[{"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\index.js":"1","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\App.js":"2","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\context\\UserContext.js":"3","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\Question.js":"4","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\layout\\home.js":"5","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\auth\\login.js":"6","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\auth\\reg.js":"7","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\layout\\header.js":"8","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\post_question.js":"9","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\questions.js":"10","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\layout\\Footer.js":"11","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\ResponseForm.js":"12","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\QuestionItem.js":"13","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\ResponseItem.js":"14","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\pagination.js":"15","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\QuestionItem.js":"16","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\misc\\ErrorNotice.js":"17","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\misc\\SuccessNotice.js":"18","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\auth\\options.js":"19","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\editor\\QuillEditor.js":"20","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\context\\QuestionContext.js":"21"},{"size":189,"mtime":1609955261042,"results":"22","hashOfConfig":"23"},{"size":2774,"mtime":1610671031144,"results":"24","hashOfConfig":"23"},{"size":75,"mtime":1609366946847,"results":"25","hashOfConfig":"23"},{"size":1633,"mtime":1609955261016,"results":"26","hashOfConfig":"23"},{"size":1056,"mtime":1610708639362,"results":"27","hashOfConfig":"23"},{"size":2784,"mtime":1609955261020,"results":"28","hashOfConfig":"23"},{"size":5175,"mtime":1609366946841,"results":"29","hashOfConfig":"23"},{"size":2650,"mtime":1610709768411,"results":"30","hashOfConfig":"23"},{"size":3988,"mtime":1610671031160,"results":"31","hashOfConfig":"23"},{"size":4561,"mtime":1610715323676,"results":"32","hashOfConfig":"23"},{"size":249,"mtime":1610707712950,"results":"33","hashOfConfig":"23"},{"size":2514,"mtime":1609955261018,"results":"34","hashOfConfig":"23"},{"size":2616,"mtime":1610710728600,"results":"35","hashOfConfig":"23"},{"size":3341,"mtime":1609955261019,"results":"36","hashOfConfig":"23"},{"size":670,"mtime":1609955261037,"results":"37","hashOfConfig":"23"},{"size":4428,"mtime":1610709889581,"results":"38","hashOfConfig":"23"},{"size":478,"mtime":1609366946844,"results":"39","hashOfConfig":"23"},{"size":539,"mtime":1609366946844,"results":"40","hashOfConfig":"23"},{"size":1269,"mtime":1610671031146,"results":"41","hashOfConfig":"23"},{"size":15020,"mtime":1609955261032,"results":"42","hashOfConfig":"23"},{"size":75,"mtime":1610671031163,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1pdc4xc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\index.js",[],["95","96"],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\App.js",["97"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Axios from \"axios\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/layout/header\";\r\nimport home from \"./components/layout/home\";\r\nimport login from \"./components/auth/login\";\r\nimport register from \"./components/auth/reg\";\r\nimport \"./components/layout/style.css\";\r\nimport \"./components/pages/pages.css\";\r\nimport \"./components/pages/searchBar.css\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport QuestionContext from \"./context/QuestionContext\";\r\n\r\nimport Post_question from \"./components/pages/post_question\";\r\nimport Questions from \"./components/pages/questions\";\r\nimport Question from \"./components/Question/Question\";\r\n\r\nexport default function App() {\r\n  const getQuestion = () => {};\r\n\r\n  const [questionData, setQuestionData] = useState();\r\n\r\n  useEffect(() => {}, [questionData]);\r\n\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined, //user\r\n  });\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        token = \"\";\r\n      }\r\n      const tokenRes = await Axios.post(\"/user/verifytoken\", null, {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n\r\n      if (tokenRes.data) {\r\n        const userRes = await Axios.get(\"/user/\", {\r\n          headers: {\r\n            \"auth-token\": token,\r\n          },\r\n        });\r\n        setUserData({\r\n          token,\r\n          user: userRes.data,\r\n        });\r\n      }\r\n    };\r\n\r\n    checkLoggedIn();\r\n\r\n    const getQuestions = async () => {\r\n      Axios.get(\"/posts/all\")\r\n        .then((res) => {\r\n          setQuestionData(res.data);\r\n          console.log(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n    getQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <UserContext.Provider value={{ userData, setUserData }}>\r\n          <QuestionContext.Provider value={{ questionData, setQuestionData }}>\r\n            <Header></Header>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={home} />\r\n              <Route path=\"/login\" component={login} />\r\n              <Route path=\"/register\" component={register} />\r\n              {/* check logged in */}\r\n              <Route path=\"/posts/ask\" component={Post_question} />\r\n              <Route path=\"/posts/all\" component={Questions} />\r\n              <Route path=\"/posts/:id\" component={Question} />\r\n            </Switch>\r\n          </QuestionContext.Provider>\r\n        </UserContext.Provider>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\context\\UserContext.js",[],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\Question.js",["98"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport QuestionItem from \"../Question/QuestionItem\";\r\nimport ResponseForm from \"./ResponseForm\";\r\nimport ResponseItem from \"./ResponseItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Question = ({ match }) => {\r\n  const [question, setQuestion] = useState({});\r\n//   const [author, setAuthor] = useState({});\r\n  const [responses, setResponses] = useState([]);\r\n  const questionId = match.params.id;\r\n \r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/posts/\" + questionId)\r\n      .then((res) => {\r\n        setQuestion(res.data);\r\n        // console.log(question);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    axios\r\n      .get(\"/posts/reponses/\" + match.params.id)\r\n      .then((res) => setResponses(res.data))\r\n      .catch();\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <Link to=\"/posts/all\">\r\n          <i className=\"fa fa-arrow-left\"></i>Back to questions\r\n        </Link>\r\n       \r\n        <QuestionItem question={questionId} />\r\n        <div>\r\n          <div className=\"border m-2\"></div>\r\n          <p className=\"\">{responses.length} answers</p>\r\n\r\n          {responses.map((response) => (\r\n            <ResponseItem\r\n              key={response._id}\r\n              questionId={questionId}\r\n              response={response}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"border m-2\"></div>\r\n        <ResponseForm id={question._id} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\layout\\home.js",["99","100","101","102","103"],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\auth\\login.js",[],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\auth\\reg.js",["104"],"import React, { useState, useContext } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { Fragment } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nfunction Register() {\r\n  /** Tracking the states of the form */\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [fname, setFirstName] = useState();\r\n  const [lname, setLastName] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const [success, setSuccess] = useState();\r\n\r\n  /** Successful registration of account */\r\n  const { setUserData } = useContext(UserContext);\r\n  // const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = {\r\n        username,\r\n        fname,\r\n        lname,\r\n        email,\r\n        password,\r\n        passwordCheck,\r\n      };\r\n      await Axios.post(\"http://localhost:5000/api/user/register\", newUser);\r\n\r\n      const loginRes = await Axios.post(\r\n        \"http://localhost:5000/api/user/login\",\r\n        {\r\n          email,\r\n          password,\r\n        }\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.id,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      //  console.log(loginRes.data.user.id);\r\n      if (loginRes.data.token) {\r\n        setSuccess(\"Account created successfully. Welcome aboard !\");\r\n      }\r\n      // history.push(\"/\");\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n    // window.location.reload(false);\r\n    // console.log(loginRes);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <section>\r\n          <h1 className=\"label text-primary\">Sign Up</h1>\r\n          {success && (\r\n            <SuccessNotice\r\n              message={success}\r\n              clearError={() => setSuccess(undefined)}\r\n            />\r\n          )}\r\n      \r\n          {error && (\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n            />\r\n          )}\r\n\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i> Sign Into Your Account\r\n          </p>\r\n          <form onSubmit={submit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputusername\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-username\"\r\n                placeholder=\"Username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputLastName\">Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-lastname\"\r\n                placeholder=\"Doe\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputFirstName\">First name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"reg-firstname\"\r\n                placeholder=\"Jane\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputemail\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"reg-email\"\r\n                placeholder=\"email@gmail.com\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password\"\r\n                placeholder=\"******\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"reg-password-vf\"\r\n                placeholder=\"Verify Password\"\r\n                onChange={(e) => setPasswordCheck(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" value=\"Register\" className=\"btn btn-primary\">\r\n              Register\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?\r\n            <Link to=\"/login\"> Sign in</Link>\r\n          </p>\r\n        </section>\r\n      </div>\r\n      <Footer></Footer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\layout\\header.js",["105","106","107","108","109","110"],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\post_question.js",["111","112"],"import React, { useState, useContext } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport SuccessNotice from \"../misc/SuccessNotice\";\r\n// import List from '@editorjs/list';\r\nimport QuillEditor from \"./editor/QuillEditor\";\r\nimport {message} from \"antd\"; \r\n\r\nexport default function Post_question() {\r\n\r\n  \r\n  const userData = useContext(UserContext)\r\n\r\n  const onEditorChange = (value) =>\r\n  {\r\n    setContent(value);\r\n  } \r\n  const onFilesChange = (files) => {\r\n    setFiles(files)\r\n}\r\n\r\n\r\n  /** Successfully accessed userData */\r\n  // console.log(userData.userData.token);\r\n  const [files, setFiles] = useState([])\r\n  const [qst_title, setTitle] = useState();\r\n  const [qst_content, setContent] = useState();\r\n\r\n  \r\n  /** Error posting the question */\r\n  const [error, setError] = useState();\r\n\r\n  /** Successfully posted question */\r\n  const [success, setSuccess] = useState();\r\n\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = userData.userData.token;\r\n      if (token == undefined) {\r\n        message.error('You must be logged in to post a question.');\r\n\r\n        setTimeout(() => {\r\n           \r\n        }, 2500);\r\n      }\r\n\r\n      const newQuestion = {\r\n        qst_title,\r\n        qst_content,\r\n      };\r\n\r\n      const postres = await Axios.post(\"/posts/ask\", newQuestion, {\r\n        headers: { \"auth-token\": userData.userData.token },\r\n      });\r\n\r\n      if (postres) {\r\n        // setSuccess(\"Question posted successfully !\");\r\n        message.success('Post Created!');\r\n\r\n                    setTimeout(() => {\r\n                       \r\n                    }, 2500);\r\n      }\r\n    } catch (err) {\r\n      err.response.data.msg && message.warning(err.response.data.msg); \r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <div className=\"container\">\r\n          <form onSubmit={submit}>\r\n            <h1 className=\"label text-primary\"> Got a question ?</h1>\r\n\r\n            {success && (\r\n              <SuccessNotice\r\n                message={success}\r\n                clearError={() => setSuccess(undefined)}\r\n              />\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              {error && (\r\n                <ErrorNotice\r\n                  message={error}\r\n                  clearError={() => setError(undefined)}\r\n                />\r\n                \r\n              )}\r\n              <label for=\"qst_title\">Question title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"qst_title\"\r\n                aria-describedby=\"Put your question title here\"\r\n                placeholder=\"Put your question title here\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n              <small id=\"qst_help\" className=\"form-text text-muted\">\r\n                Keep it simple !\r\n              </small>\r\n            </div>\r\n           <div className=\"form-group\">\r\n              <label for=\"\">Content</label>\r\n\r\n              <div id=\"ql-editor\">\r\n                  <QuillEditor \r\n                  className=\"ql-editor\"\r\n                    placeholder=\"Start Posting Something\"\r\n                    onEditorChange={onEditorChange}\r\n                    onFilesChange={onFilesChange}\r\n                    // onFilesChange={onFilesChange}\r\n\r\n                  />\r\n                </div>\r\n              {/* <textarea\r\n                type=\"text\"\r\n                className=\"form-control full-width\"\r\n                id=\"qst_content\"\r\n                placeholder=\"Content of the question\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              /> */}\r\n              \r\n            </div> \r\n           \r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Post\r\n            </button>\r\n\r\n               \r\n            \r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\questions.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\layout\\Footer.js",["130"],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\ResponseForm.js",["131","132","133"],"import React, { Fragment, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\nimport QuillEditor from \"../pages/editor/QuillEditor\";\r\nimport {message} from \"antd\"; \r\n\r\n\r\nconst ResponseForm = ({ id }) => {\r\n  const [rep_content, setContent] = useState(\"\");\r\n  const [error, setError] = useState();\r\n  const [files, setFiles] = useState();\r\n\r\n\r\n  // console.log(checkLogin());\r\n  const onEditorChange = (value) =>\r\n  {\r\n    setContent(value);\r\n  } \r\n  const onFilesChange = (files) => {\r\n    setFiles(files)\r\n}\r\n\r\n  const submit = (e) => {\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    const login = true;\r\n    if (token == \"\") {\r\n      message.error('You must be logged in to perform this action.');\r\n\r\n      setTimeout(() => {\r\n         \r\n      }, 2500);\r\n    }\r\n\r\n    const newResponse = {\r\n      rep_content,\r\n    };\r\n    // console.log(id);\r\n    axios\r\n      .post(\"/posts/respond/\" + id, newResponse, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <form onSubmit={submit}>\r\n          <h4 className=\"label text-primary\"> Your answer! </h4>\r\n          {error && (\r\n            <>\r\n              <ErrorNotice\r\n                message={error}\r\n                clearError={() => setError(undefined)}\r\n                link=\"Sign in here\"\r\n              />\r\n            </>\r\n          )}\r\n          {/* <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control full-width\"\r\n              id=\"rep_content\"\r\n              placeholder=\"Content of the response\"\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n          </div> */}\r\n          <div id=\"ql-editor\">\r\n                  <QuillEditor \r\n                  className=\"ql-editor\"\r\n                    placeholder=\"Start Posting Something\"\r\n                    onEditorChange={onEditorChange}\r\n                    onFilesChange={onFilesChange}\r\n                    // onFilesChange={onFilesChange}\r\n\r\n                  />\r\n                </div>\r\n                \r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Post your answer\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResponseForm;\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\QuestionItem.js",["134","135"],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\Question\\ResponseItem.js",["136","137","138","139"],"import React, { Fragment, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\n\r\nimport {message} from \"antd\"; \r\n\r\n\r\nconst ResponseItem = ({ response, questionId }) => {\r\n \r\n  const [like, setlikes] = useState([response.rep_likes.length]);\r\n  const [dislike, setdislikes] = useState([response.rep_dislikes.length]);\r\n  const [error, setError] = useState();\r\n  // const { setUserData } = useContext(UserContext);\r\n  const handleLike = (res_id) => {\r\n    const id = res_id;\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    if (token == \"\") {\r\n      message.error('You must be logged in to perform this action.');\r\n\r\n      setTimeout(() => {\r\n         \r\n      }, 2500);\r\n    }\r\n    axios\r\n      .put(\"/posts/like/\" + questionId + \"/responses/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.rep_likes.length);\r\n        setlikes(res.data.rep_likes.length);\r\n        setdislikes(res.data.rep_dislikes.length);\r\n      })\r\n      .catch((err) => err.response.data.msg && setError(err.response.data.msg));\r\n  };\r\n\r\n  const handleDislike = (res_id) => {\r\n    const id = res_id;\r\n    axios\r\n      .put(\"/posts/unlike/\" + questionId + \"/responses/\" + id, null, {\r\n        headers: { \"auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setlikes(res.data.rep_likes.length);\r\n        setdislikes(res.data.rep_dislikes.length);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ width: \"70vw\", margin: \"5px\", borderColor: \"black\" }}>\r\n        <Card.Body>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            Answered by :\r\n            <Card.Link href=\"#LinktoUser\"> {response.username} </Card.Link>\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-1 text-muted\">\r\n            {\" \"}\r\n            On : {response.rep_date.substring(0, 10)}{\" \"}\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            <div\r\n              dangerouslySetInnerHTML={{ __html: response.rep_content }}\r\n            ></div>\r\n          </Card.Text>\r\n          <div className=\"ml-auto\">\r\n            {/* {error && (<>\r\n            <ErrorNotice\r\n              message={error}\r\n              clearError={() => setError(undefined)}\r\n              link =\"Sign in here\"\r\n            />\r\n          </>\r\n           \r\n          )} */}\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-2\"\r\n              value={response._id}\r\n              onClick={() => {\r\n                handleLike(response._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-up\"></i> <span>{like}</span>\r\n            </button>\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                handleDislike(response._id);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-thumbs-down\"></i>\r\n              {\" \"}\r\n               {<span>{dislike}</span>}\r\n            </button> */}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\pagination.js",["140"],"import React from 'react'\r\n\r\n\r\nconst pagination = ({postsPerPage,totalPosts, paginate}) => {\r\n    const pageNumber= []\r\n\r\n    for(let i=1;i<=Math.ceil(totalPosts/postsPerPage);i++){\r\n        pageNumber.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {\r\n                    pageNumber.map(number=> (\r\n                        <li  key={number} className='page-item'>\r\n                            <a  onClick={()=> paginate(number)} className='page-link'>{number}</a>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default pagination\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\QuestionItem.js",["141","142","143","144","145"],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\misc\\ErrorNotice.js",[],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\misc\\SuccessNotice.js",["146"],"import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function SuccessNotice(props) {\r\n    return (\r\n        <div>\r\n            <Alert variant='success' id='succ_message'>\r\n            <span> {props.message} \r\n            {/* <Link id='link_signin' to=\"/login\"> <br/> Sign in Now</Link> */}\r\n            </span>\r\n            \r\n            {/* <button onClick={props.clearError}>X</button>          */}\r\n            \r\n            </Alert>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\auth\\options.js",[],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\components\\pages\\editor\\QuillEditor.js",[],"C:\\Users\\Dell XPS\\NodeJS\\EnsiasOverflow_v1.0.0\\client\\src\\context\\QuestionContext.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":21,"column":9,"nodeType":"153","messageId":"154","endLine":21,"endColumn":20},{"ruleId":"155","severity":1,"message":"156","line":27,"column":6,"nodeType":"157","endLine":27,"endColumn":8,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":16},{"ruleId":"151","severity":1,"message":"160","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":13},{"ruleId":"151","severity":1,"message":"161","line":6,"column":9,"nodeType":"153","messageId":"154","endLine":6,"endColumn":13},{"ruleId":"151","severity":1,"message":"162","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":20,"column":25,"nodeType":"165","endLine":20,"endColumn":40},{"ruleId":"151","severity":1,"message":"166","line":4,"column":16,"nodeType":"153","messageId":"154","endLine":4,"endColumn":26},{"ruleId":"151","severity":1,"message":"167","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"168","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":20},{"ruleId":"151","severity":1,"message":"169","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":13},{"ruleId":"151","severity":1,"message":"170","line":13,"column":10,"nodeType":"153","messageId":"154","endLine":13,"endColumn":20},{"ruleId":"151","severity":1,"message":"171","line":32,"column":9,"nodeType":"153","messageId":"154","endLine":32,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":39,"column":9,"nodeType":"165","endLine":39,"endColumn":50},{"ruleId":"151","severity":1,"message":"174","line":25,"column":10,"nodeType":"153","messageId":"154","endLine":25,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":41,"column":17,"nodeType":"177","messageId":"178","endLine":41,"endColumn":19},{"ruleId":"151","severity":1,"message":"179","line":1,"column":48,"nodeType":"153","messageId":"154","endLine":1,"endColumn":58},{"ruleId":"151","severity":1,"message":"180","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":23},{"ruleId":"151","severity":1,"message":"181","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":14},{"ruleId":"151","severity":1,"message":"182","line":11,"column":7,"nodeType":"153","messageId":"154","endLine":11,"endColumn":17},{"ruleId":"151","severity":1,"message":"183","line":22,"column":10,"nodeType":"153","messageId":"154","endLine":22,"endColumn":14},{"ruleId":"151","severity":1,"message":"184","line":22,"column":16,"nodeType":"153","messageId":"154","endLine":22,"endColumn":23},{"ruleId":"151","severity":1,"message":"185","line":23,"column":10,"nodeType":"153","messageId":"154","endLine":23,"endColumn":17},{"ruleId":"151","severity":1,"message":"186","line":25,"column":24,"nodeType":"153","messageId":"154","endLine":25,"endColumn":39},{"ruleId":"155","severity":1,"message":"187","line":40,"column":6,"nodeType":"157","endLine":40,"endColumn":8,"suggestions":"188"},{"ruleId":"151","severity":1,"message":"189","line":54,"column":9,"nodeType":"153","messageId":"154","endLine":54,"endColumn":17},{"ruleId":"151","severity":1,"message":"190","line":60,"column":9,"nodeType":"153","messageId":"154","endLine":60,"endColumn":21},{"ruleId":"191","severity":1,"message":"192","line":89,"column":11,"nodeType":"193","endLine":89,"endColumn":34},{"ruleId":"194","severity":1,"message":"195","line":109,"column":58,"nodeType":"165","endLine":109,"endColumn":93},{"ruleId":"194","severity":1,"message":"195","line":110,"column":50,"nodeType":"165","endLine":110,"endColumn":91},{"ruleId":"194","severity":1,"message":"195","line":111,"column":50,"nodeType":"165","endLine":111,"endColumn":94},{"ruleId":"194","severity":1,"message":"195","line":112,"column":50,"nodeType":"165","endLine":112,"endColumn":92},{"ruleId":"196","severity":1,"message":"197","line":117,"column":25,"nodeType":"198","messageId":"199","endLine":117,"endColumn":27},{"ruleId":"194","severity":1,"message":"195","line":7,"column":13,"nodeType":"165","endLine":7,"endColumn":16},{"ruleId":"151","severity":1,"message":"174","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":15},{"ruleId":"151","severity":1,"message":"200","line":25,"column":11,"nodeType":"153","messageId":"154","endLine":25,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":26,"column":15,"nodeType":"177","messageId":"178","endLine":26,"endColumn":17},{"ruleId":"151","severity":1,"message":"162","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":19},{"ruleId":"155","severity":1,"message":"201","line":29,"column":6,"nodeType":"157","endLine":29,"endColumn":8,"suggestions":"202"},{"ruleId":"151","severity":1,"message":"203","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":17},{"ruleId":"151","severity":1,"message":"204","line":12,"column":10,"nodeType":"153","messageId":"154","endLine":12,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":17,"column":15,"nodeType":"177","messageId":"178","endLine":17,"endColumn":17},{"ruleId":"151","severity":1,"message":"205","line":36,"column":9,"nodeType":"153","messageId":"154","endLine":36,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":16,"column":29,"nodeType":"165","endLine":16,"endColumn":87},{"ruleId":"151","severity":1,"message":"206","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":19},{"ruleId":"151","severity":1,"message":"207","line":2,"column":21,"nodeType":"153","messageId":"154","endLine":2,"endColumn":27},{"ruleId":"151","severity":1,"message":"208","line":16,"column":9,"nodeType":"153","messageId":"154","endLine":16,"endColumn":11},{"ruleId":"151","severity":1,"message":"203","line":18,"column":10,"nodeType":"153","messageId":"154","endLine":18,"endColumn":17},{"ruleId":"175","severity":1,"message":"176","line":39,"column":15,"nodeType":"177","messageId":"178","endLine":39,"endColumn":17},{"ruleId":"151","severity":1,"message":"161","line":3,"column":9,"nodeType":"153","messageId":"154","endLine":3,"endColumn":13},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'getQuestion' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.id' and 'questionId'. Either include them or remove the dependency array.","ArrayExpression",["211"],"'Register' is defined but never used.","'Login' is defined but never used.","'Link' is defined but never used.","'ErrorNotice' is defined but never used.","react/jsx-pascal-case","Imported JSX component Post_question must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'QuestionItem' is defined but never used.","'Axios' is defined but never used.","'searchItem' is assigned a value but never used.","'qsts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'files' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'QuestionContext' is defined but never used.","'moment' is defined but never used.","'inputstyle' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'visible' is assigned a value but never used.","'setPostsPerPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["212"],"'loadmore' is assigned a value but never used.","'currentPosts' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'login' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'author' and 'question'. Either include them or remove the dependency array.",["213"],"'dislike' is assigned a value but never used.","'error' is assigned a value but never used.","'handleDislike' is assigned a value but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'dt' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [match.params.id, questionId]",{"range":"220","text":"221"},"Update the dependencies array to be: [key]",{"range":"222","text":"223"},"Update the dependencies array to be: [author, question]",{"range":"224","text":"225"},[891,893],"[match.params.id, questionId]",[1324,1326],"[key]",[899,901],"[author, question]"]